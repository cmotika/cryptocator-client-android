android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.b:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.c:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.d:
    boolean SUPPORTS_TRANSITIONS -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    android.support.v4.app.BackStackRecord$Op mHead -> c
    android.support.v4.app.BackStackRecord$Op mTail -> d
    int mNumOp -> e
    int mEnterAnim -> f
    int mExitAnim -> g
    int mPopEnterAnim -> h
    int mPopExitAnim -> i
    int mTransition -> j
    int mTransitionStyle -> k
    boolean mAddToBackStack -> l
    boolean mAllowAddToBackStack -> m
    java.lang.String mName -> n
    boolean mCommitted -> o
    int mIndex -> p
    int mBreadCrumbTitleRes -> q
    java.lang.CharSequence mBreadCrumbTitleText -> r
    int mBreadCrumbShortTitleRes -> s
    java.lang.CharSequence mBreadCrumbShortTitleText -> t
    java.util.ArrayList mSharedElementSourceNames -> u
    java.util.ArrayList mSharedElementTargetNames -> v
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> a
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> b
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    java.lang.String getName() -> b
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> b
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> a
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> a
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> b
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> a
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    android.view.View getView() -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.f:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.g:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.h:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.i:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.j:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> aa
    java.lang.Object USE_DEFAULT_TRANSITION -> a
    int mState -> b
    android.view.View mAnimatingAway -> c
    int mStateAfterAnimating -> d
    android.os.Bundle mSavedFragmentState -> e
    android.util.SparseArray mSavedViewState -> f
    int mIndex -> g
    java.lang.String mWho -> h
    android.os.Bundle mArguments -> i
    android.support.v4.app.Fragment mTarget -> j
    int mTargetIndex -> k
    int mTargetRequestCode -> l
    boolean mAdded -> m
    boolean mRemoving -> n
    boolean mResumed -> o
    boolean mFromLayout -> p
    boolean mInLayout -> q
    boolean mRestored -> r
    int mBackStackNesting -> s
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> t
    android.support.v4.app.FragmentActivity mActivity -> u
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> v
    android.support.v4.app.Fragment mParentFragment -> w
    int mFragmentId -> x
    int mContainerId -> y
    java.lang.String mTag -> z
    boolean mHidden -> A
    boolean mDetached -> B
    boolean mRetainInstance -> C
    boolean mRetaining -> D
    boolean mHasMenu -> E
    boolean mMenuVisible -> F
    boolean mCalled -> G
    int mNextAnim -> H
    android.view.ViewGroup mContainer -> I
    android.view.View mView -> J
    android.view.View mInnerView -> K
    boolean mDeferStart -> L
    boolean mUserVisibleHint -> M
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> N
    boolean mLoadersStarted -> O
    boolean mCheckedForLoaderManager -> P
    java.lang.Object mEnterTransition -> Q
    java.lang.Object mReturnTransition -> R
    java.lang.Object mExitTransition -> S
    java.lang.Object mReenterTransition -> T
    java.lang.Object mSharedElementEnterTransition -> U
    java.lang.Object mSharedElementReturnTransition -> V
    java.lang.Boolean mAllowReturnTransitionOverlap -> W
    java.lang.Boolean mAllowEnterTransitionOverlap -> X
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> Y
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> Z
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> h
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> i
    void onResume() -> j
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> k
    void onStop() -> l
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> m
    void onDestroy() -> n
    void initState() -> o
    void onDetach() -> p
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> q
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    java.lang.Object getEnterTransition() -> r
    java.lang.Object getReturnTransition() -> s
    java.lang.Object getExitTransition() -> t
    java.lang.Object getReenterTransition() -> u
    java.lang.Object getSharedElementEnterTransition() -> v
    java.lang.Object getSharedElementReturnTransition() -> w
    boolean getAllowEnterTransitionOverlap() -> x
    boolean getAllowReturnTransitionOverlap() -> y
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> z
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> A
    void performResume() -> B
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> C
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> D
    void performStop() -> E
    void performReallyStop() -> F
    void performDestroyView() -> G
    void performDestroy() -> H
android.support.v4.app.Fragment$1 -> android.support.v4.app.k:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.l:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.m:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.n:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> c
    void supportInvalidateOptionsMenu() -> d
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> e
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.o:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.p:
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.q:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.r:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.s:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> u
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> t
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.u:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.v:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.y:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.z:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.aa:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ab:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.ac:
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> a
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    void setEpicenter(java.lang.Object,android.view.View) -> a
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> a
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> a
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> b
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> b
    void findNamedViews(java.util.Map,android.view.View) -> a
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    boolean hasSimpleTarget(android.transition.Transition) -> a
    boolean isNullOrEmpty(java.util.List) -> a
    void access$000(java.util.ArrayList,android.view.View) -> a
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.ad:
    android.graphics.Rect val$epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.ae:
    android.view.View val$container -> a
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> b
    java.util.Map val$nameOverrides -> c
    java.util.Map val$renamedViews -> d
    android.transition.Transition val$enterTransition -> e
    java.util.ArrayList val$enteringViews -> f
    android.view.View val$nonExistentView -> g
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.af:
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> a
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.ag:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$enteringViews -> d
    android.transition.Transition val$exitTransition -> e
    java.util.ArrayList val$exitingViews -> f
    android.transition.Transition val$sharedElementTransition -> g
    java.util.ArrayList val$sharedElementTargets -> h
    java.util.Map val$renamedViews -> i
    java.util.ArrayList val$hiddenViews -> j
    android.transition.Transition val$overallTransition -> k
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.ah:
    android.view.View epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.ai:
    android.view.View getView() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.aj:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ak:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.al:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.am:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.an:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.ao:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.ap:
    android.app.Notification$Builder getBuilder() -> a
android.support.v4.app.NotificationCompat -> android.support.v4.app.aq:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> b
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> b
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ar:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> e
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.as:
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.at:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.au:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.av:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mShowWhen -> k
    boolean mUseChronometer -> l
    android.support.v4.app.NotificationCompat$Style mStyle -> m
    java.lang.CharSequence mSubText -> n
    int mProgressMax -> o
    int mProgress -> p
    boolean mProgressIndeterminate -> q
    java.lang.String mGroupKey -> r
    boolean mGroupSummary -> s
    java.lang.String mSortKey -> t
    java.util.ArrayList mActions -> u
    boolean mLocalOnly -> v
    java.lang.String mCategory -> w
    android.os.Bundle mExtras -> x
    int mColor -> y
    int mVisibility -> z
    android.app.Notification mPublicVersion -> A
    android.app.Notification mNotification -> B
    java.util.ArrayList mPeople -> C
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> a
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> b
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> b
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> c
    android.app.Notification build() -> a
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> d
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.aw:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ax:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.ay:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.az:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ba:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.bb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.bc:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.bd:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.be:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.bf:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.bg:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.bh:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.bi:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.bj:
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.bk:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.bl:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.bm:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.bn:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.bo:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.bp:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.bq:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.br:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    android.os.Bundle getExtras(android.app.Notification) -> a
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.bs:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.bt:
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.bu:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.RemoteInput -> android.support.v4.app.bv:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.bw:
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.bx:
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.by:
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.bz:
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.ca:
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.cb:
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.cc:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.cd:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.ce:
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.cf:
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.SharedElementCallback -> android.support.v4.app.cg:
    int MAX_IMAGE_SIZE -> a
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onMapSharedElements(java.util.List,java.util.Map) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ch:
android.support.v4.content.ContextCompat -> android.support.v4.a.a:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.ContextCompatApi21 -> android.support.v4.a.b:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.Loader -> android.support.v4.a.c:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.d:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    java.lang.Object mDescriptionObj -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> a
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.a:
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.b:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> b
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> c
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> a
    android.support.v4.media.MediaDescriptionCompat build() -> a
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.c:
    java.lang.String getMediaId(java.lang.Object) -> a
    java.lang.CharSequence getTitle(java.lang.Object) -> b
    java.lang.CharSequence getSubtitle(java.lang.Object) -> c
    java.lang.CharSequence getDescription(java.lang.Object) -> d
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> e
    android.net.Uri getIconUri(java.lang.Object) -> f
    android.os.Bundle getExtras(java.lang.Object) -> g
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    java.lang.Object fromParcel(android.os.Parcel) -> a
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.d:
    java.lang.Object newInstance() -> a
    void setMediaId(java.lang.Object,java.lang.String) -> a
    void setTitle(java.lang.Object,java.lang.CharSequence) -> a
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> b
    void setDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> a
    void setIconUri(java.lang.Object,android.net.Uri) -> a
    void setExtras(java.lang.Object,android.os.Bundle) -> a
    java.lang.Object build(java.lang.Object) -> a
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> b
    java.lang.String[] PREFERRED_BITMAP_ORDER -> c
    java.lang.String[] PREFERRED_URI_ORDER -> d
    android.os.Bundle mBundle -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.e:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.f:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.RatingCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.a:
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> a
    long mId -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.b:
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.c:
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.d:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> a
    int audioStream -> b
    int controlType -> c
    int maxVolume -> d
    int currentVolume -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.e:
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.f:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> a
    java.lang.CharSequence mName -> b
    int mIcon -> c
    android.os.Bundle mExtras -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.g:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.z:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> a
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.aa:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.ab:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.ac:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.ad:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.ae:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.af:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> a
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.ag:
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.ah:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.ai:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.aj:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.ak:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
    int getSource(android.view.MotionEvent) -> d
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.al:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.am:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.an:
    int getSource(android.view.MotionEvent) -> b
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.ao:
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ap:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.aq:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.ar:
    int getSource(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.as:
    float getAxisValue(android.view.MotionEvent,int) -> a
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.at:
    void stopNestedScroll() -> a
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.au:
    android.view.View mView -> a
    android.view.ViewParent mNestedScrollingParent -> b
    boolean mIsNestedScrollingEnabled -> c
    int[] mTempNestedScrollConsumed -> d
    void setNestedScrollingEnabled(boolean) -> a
    boolean isNestedScrollingEnabled() -> a
    boolean hasNestedScrollingParent() -> b
    boolean startNestedScroll(int) -> a
    void stopNestedScroll() -> c
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    boolean dispatchNestedFling(float,float,boolean) -> a
    boolean dispatchNestedPreFling(float,float) -> a
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.av:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.View) -> a
    void onNestedScroll(android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.View,float,float) -> a
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.aw:
    int mNestedScrollAxes -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    int getNestedScrollAxes() -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ax:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.ScrollingView -> android.support.v4.view.ay:
    int computeHorizontalScrollRange() -> a
    int computeHorizontalScrollOffset() -> b
    int computeHorizontalScrollExtent() -> c
    int computeVerticalScrollRange() -> d
    int computeVerticalScrollOffset() -> e
    int computeVerticalScrollExtent() -> f
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.az:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ba:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.bb:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.bc:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.bd:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.be:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> g
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void stopNestedScroll(android.view.View) -> h
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.bf:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> g
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> a
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> b
    void stopNestedScroll(android.view.View) -> h
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.bg:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.bh:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.bi:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.bj:
    boolean accessibilityDelegateCheckFailed -> b
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.bk:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    boolean getFitsSystemWindows(android.view.View) -> g
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bl:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.bm:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.bn:
    void stopNestedScroll(android.view.View) -> h
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bo:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> g
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void stopNestedScroll(android.view.View) -> h
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bp:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bq:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.br:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.bs:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bt:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    boolean getFitsSystemWindows(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bu:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.bv:
    void stopNestedScroll(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bw:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bx:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.by:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bz:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ca:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cb:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.cc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.cd:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ce:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.cf:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cg:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ch:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ci:
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.cj:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.ck:
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.cl:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.cm:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.cn:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.a.b:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.a.c:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.a.e:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.f:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.g:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.a.h:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.i:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent(java.lang.Object,android.view.View) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.j:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.k:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.l:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.m:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.n:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent(java.lang.Object,android.view.View) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.o:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent(java.lang.Object,android.view.View) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.p:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.q:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.s:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.t:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.w:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.x:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.y:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.z:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.aa:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.ab:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.ac:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.ad:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    void setScrollable(boolean) -> a
    void setScrollX(int) -> a
    void setScrollY(int) -> b
    void setMaxScrollX(int) -> c
    void setMaxScrollY(int) -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.ae:
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.af:
    void setMaxScrollX(java.lang.Object,int) -> c
    void setMaxScrollY(java.lang.Object,int) -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.ag:
    void setScrollable(java.lang.Object,boolean) -> a
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setMaxScrollX(java.lang.Object,int) -> c
    void setMaxScrollY(java.lang.Object,int) -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ah:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ai:
    void setMaxScrollX(java.lang.Object,int) -> c
    void setMaxScrollY(java.lang.Object,int) -> d
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.aj:
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.a.ak:
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> b
    boolean CAN_HIDE_DESCENDANTS -> c
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> d
    int mMinDrawerMargin -> e
    int mScrimColor -> f
    float mScrimOpacity -> g
    android.graphics.Paint mScrimPaint -> h
    android.support.v4.widget.ViewDragHelper mLeftDragger -> i
    android.support.v4.widget.ViewDragHelper mRightDragger -> j
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> k
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> l
    int mDrawerState -> m
    boolean mInLayout -> n
    boolean mFirstLayout -> o
    int mLockModeLeft -> p
    int mLockModeRight -> q
    boolean mDisallowInterceptRequested -> r
    boolean mChildrenCanceledTouch -> s
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> t
    float mInitialMotionX -> u
    float mInitialMotionY -> v
    android.graphics.drawable.Drawable mShadowLeft -> w
    android.graphics.drawable.Drawable mShadowRight -> x
    android.graphics.drawable.Drawable mStatusBarBackground -> y
    java.lang.Object mLastInsets -> z
    boolean mDrawStatusBarBackground -> A
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> a
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> m
    int[] access$100() -> c
    boolean access$400(android.view.View) -> k
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.a:
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.b:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.c:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.d:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.e:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.f:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.g:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.h:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.i:
    int[] THEME_ATTRS -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.j:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onPull(float,float) -> a
    boolean onRelease() -> c
    boolean onAbsorb(int) -> a
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.l:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.m:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.n:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.o:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.p:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    long mLastScroll -> a
    android.graphics.Rect mTempRect -> b
    android.support.v4.widget.ScrollerCompat mScroller -> c
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> d
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> e
    int mLastMotionY -> f
    boolean mIsLayoutDirty -> g
    boolean mIsLaidOut -> h
    android.view.View mChildToScrollTo -> i
    boolean mIsBeingDragged -> j
    android.view.VelocityTracker mVelocityTracker -> k
    boolean mFillViewport -> l
    boolean mSmoothScrollingEnabled -> m
    int mTouchSlop -> n
    int mMinimumVelocity -> o
    int mMaximumVelocity -> p
    int mActivePointerId -> q
    int[] mScrollOffset -> r
    int[] mScrollConsumed -> s
    int mNestedYOffset -> t
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> u
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> v
    int[] SCROLLVIEW_STYLEABLE -> w
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> x
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> y
    float mVerticalScrollFactor -> z
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean startNestedScroll(int) -> a
    void stopNestedScroll() -> a
    boolean hasNestedScrollingParent() -> b
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    boolean dispatchNestedFling(float,float,boolean) -> a
    boolean dispatchNestedPreFling(float,float) -> a
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.View) -> a
    void onNestedScroll(android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.View,float,float) -> a
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> c
    void setFillViewport(boolean) -> setFillViewport
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean inChild(int,int) -> c
    void initOrResetVelocityTracker() -> d
    void initVelocityTrackerIfNotExists() -> e
    void recycleVelocityTracker() -> f
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    boolean pageScroll(int) -> b
    boolean fullScroll(int) -> c
    boolean scrollAndFocus(int,int,int) -> a
    boolean arrowScroll(int) -> d
    boolean isOffScreen(android.view.View) -> b
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    void doScrollY(int) -> f
    void smoothScrollBy(int,int) -> a
    void smoothScrollTo(int,int) -> b
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> c
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    void fling(int) -> e
    void flingWithNestedDispatch(int) -> g
    void endDrag() -> g
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> h
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> a
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.q:
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.r:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.s:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    float getCurrVelocity() -> f
    boolean computeScrollOffset() -> g
    void startScroll(int,int,int,int) -> a
    void startScroll(int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation() -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.t:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.u:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.v:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.w:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.x:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.y:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.aa:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.ab:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.ac:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ad:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ae:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.af:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
org.cryptocator.BackupActivity -> org.cryptocator.BackupActivity:
    org.cryptocator.ConversationItem conversationItem -> a
    int hostUid -> b
    int firstMid -> h
    int lastMid -> i
    java.util.List conversationList -> j
    android.app.Activity activity -> c
    android.content.Context context -> d
    android.app.AlertDialog backupDialog -> e
    boolean cancel -> f
    boolean handled -> g
    void onCreate(android.os.Bundle) -> onCreate
    int doBackup(android.content.Context,int,int,java.util.List,boolean,boolean) -> a
    int access$0(org.cryptocator.BackupActivity) -> a
    int access$1(org.cryptocator.BackupActivity) -> b
    java.util.List access$2(org.cryptocator.BackupActivity) -> c
org.cryptocator.BackupActivity$1 -> org.cryptocator.a:
    org.cryptocator.BackupActivity this$0 -> a
    android.widget.EditText val$fromText -> b
    android.widget.TextView val$fromTextInfo -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.cryptocator.BackupActivity$2 -> org.cryptocator.b:
    org.cryptocator.BackupActivity this$0 -> a
    android.widget.EditText val$toText -> b
    android.widget.TextView val$toTextInfo -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.cryptocator.BackupActivity$3 -> org.cryptocator.c:
    org.cryptocator.BackupActivity this$0 -> a
    android.widget.EditText val$fromText -> b
    android.widget.EditText val$toText -> c
    android.widget.CheckBox val$details -> d
    android.widget.CheckBox val$removeimages -> e
    void onClick(android.view.View) -> onClick
org.cryptocator.BackupActivity$4 -> org.cryptocator.d:
    org.cryptocator.BackupActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.BackupActivity$5 -> org.cryptocator.e:
    org.cryptocator.BackupActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.cryptocator.BootReceiver -> org.cryptocator.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.cryptocator.Communicator -> org.cryptocator.f:
    boolean messageReceived -> a
    boolean haveNewMessages -> b
    boolean messagesToSend -> c
    boolean SMSToSend -> d
    boolean messagesToSendIsUpToDate -> e
    int INTERNETFAILCNTBARRIER -> f
    int internetFailCnt -> g
    int LOGINFAILCNTBARRIER -> h
    int loginFailCnt -> i
    boolean accountNotActivated -> j
    boolean lastSendInternet -> k
    java.lang.String KEY_OK_SEPARATOR -> l
    java.lang.String KEY_ERROR_SEPARATOR -> m
    java.lang.String NEWLINEESCAPE -> n
    java.lang.String HASHESCAPE -> o
    void haveNewMessagesAndReceive(android.content.Context,int) -> a
    void processKeyDeliveries(android.content.Context,int,int,boolean) -> a
    void handleReadAndReceived(android.content.Context,java.lang.String,int) -> c
    void updateSentReceivedReadAsync(android.content.Context,int,int,boolean,boolean,boolean,boolean,boolean) -> a
    void receiveNextMessage(android.content.Context,int) -> b
    boolean updateDBForReceivedMessage(android.content.Context,org.cryptocator.ConversationItem) -> a
    java.lang.String handleReceivedText(android.content.Context,java.lang.String,org.cryptocator.ConversationItem,int) -> a
    void liveUpdateOrNotify(android.content.Context,org.cryptocator.ConversationItem) -> b
    java.security.Key getAESKey(android.content.Context,int,boolean,int,boolean,org.cryptocator.ConversationItem,boolean,boolean) -> a
    void sendNewNextMessageAsync(android.content.Context,int) -> c
    void sendNextMessage(android.content.Context) -> a
    void sendMessage(android.content.Context,int,java.lang.String,long,org.cryptocator.ConversationItem,int) -> a
    void sendMessageSMS(android.content.Context,int,java.lang.String,long,org.cryptocator.ConversationItem) -> a
    void sendMessageInternet(android.content.Context,int,java.lang.String,long,org.cryptocator.ConversationItem) -> b
    void createNotification(android.content.Context,org.cryptocator.ConversationItem) -> c
    void cancelNotification(android.content.Context,int) -> d
    int getNotificationCount(android.content.Context,int) -> e
    void setNotificationCount(android.content.Context,int,boolean) -> a
    void sendKeyToServer(android.content.Context,java.lang.String,java.lang.String,int) -> a
    void clearKeyFromServer(android.content.Context,java.lang.String,int) -> a
    void updateKeysFromAllServers(android.content.Context,java.util.List,boolean,org.cryptocator.Main$UpdateListener) -> a
    void updateKeysFromServer(android.content.Context,java.util.List,boolean,org.cryptocator.Main$UpdateListener,int) -> a
    void updatePhonesFromAllServers(android.content.Context,java.util.List,boolean) -> a
    void updatePhonesFromServer(android.content.Context,java.util.List,boolean,int) -> a
    void getKeyFromServer(android.content.Context,int,org.cryptocator.Main$UpdateListener,int) -> a
    java.lang.String decryptMessage(android.content.Context,java.lang.String,java.security.Key) -> a
    java.lang.String encryptServerMessage(android.content.Context,java.lang.String,java.security.Key) -> b
    java.lang.String encryptMessage(android.content.Context,java.lang.String,java.security.Key) -> c
    java.lang.String decryptAESMessage(android.content.Context,java.lang.String,java.security.Key) -> d
    java.lang.String encryptAESMessage(android.content.Context,java.lang.String,java.security.Key) -> e
    void sendReadConfirmation(android.content.Context,int) -> f
    void sendSystemMessageRead(android.content.Context,int,int) -> a
    void sendSystemMessageFailed(android.content.Context,int,int) -> b
    void sendSystemMessageRevoke(android.content.Context,int,int) -> c
    boolean isResponseValid(java.lang.String) -> a
    boolean isResponsePositive(java.lang.String) -> b
    java.lang.String getResponseContent(java.lang.String) -> c
    void access$0(android.content.Context,java.lang.String,int) -> b
org.cryptocator.Communicator$1 -> org.cryptocator.g:
    android.content.Context val$context -> a
    int val$serverId -> b
    int val$largestMid -> c
    void response(java.lang.String) -> a
org.cryptocator.Communicator$10 -> org.cryptocator.h:
    java.util.ArrayList val$uidListUsed -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void response(java.lang.String) -> a
org.cryptocator.Communicator$11 -> org.cryptocator.i:
    android.content.Context val$context -> a
    int val$uid -> b
    org.cryptocator.Main$UpdateListener val$updateListener -> c
    void response(java.lang.String) -> a
org.cryptocator.Communicator$2 -> org.cryptocator.j:
    int val$hostUid -> a
    boolean val$decryptionfailed -> b
    android.content.Context val$context -> c
    int val$mid -> d
    boolean val$read -> e
    boolean val$received -> f
    boolean val$sent -> g
    boolean val$revoked -> h
    void run() -> run
org.cryptocator.Communicator$2$1 -> org.cryptocator.k:
    org.cryptocator.Communicator$2 this$1 -> a
    int val$hostUid -> b
    boolean val$decryptionfailed -> c
    android.content.Context val$context -> d
    int val$mid -> e
    boolean val$read -> f
    boolean val$received -> g
    boolean val$sent -> h
    boolean val$revoked -> i
    void run() -> run
org.cryptocator.Communicator$3 -> org.cryptocator.l:
    android.content.Context val$context -> a
    int val$serverId -> b
    boolean val$discardMessageAndSaveLargestMid -> c
    void response(java.lang.String) -> a
org.cryptocator.Communicator$4 -> org.cryptocator.m:
    android.content.Context val$context -> a
    org.cryptocator.ConversationItem val$newItem -> b
    void run() -> run
org.cryptocator.Communicator$5 -> org.cryptocator.n:
    org.cryptocator.ConversationItem val$newItem -> a
    android.content.Context val$context -> b
    void run() -> run
org.cryptocator.Communicator$5$1 -> org.cryptocator.o:
    org.cryptocator.Communicator$5 this$1 -> a
    org.cryptocator.ConversationItem val$newItem -> b
    android.content.Context val$context -> c
    void run() -> run
org.cryptocator.Communicator$6 -> org.cryptocator.p:
    org.cryptocator.ConversationItem val$itemToSend -> a
    android.content.Context val$context -> b
    int val$to -> c
    int val$serverId -> d
    void response(java.lang.String) -> a
org.cryptocator.Communicator$7 -> org.cryptocator.q:
    android.content.Context val$context -> a
    java.lang.String val$keyhash -> b
    int val$serverId -> c
    void response(java.lang.String) -> a
org.cryptocator.Communicator$8 -> org.cryptocator.r:
    android.content.Context val$context -> a
    java.lang.String val$keyhash -> b
    int val$serverId -> c
    void response(java.lang.String) -> a
org.cryptocator.Communicator$9 -> org.cryptocator.s:
    java.util.List val$uidList -> a
    java.util.ArrayList val$sentList -> b
    android.content.Context val$context -> c
    org.cryptocator.Main$UpdateListener val$updateListener -> d
    int val$serverId -> e
    void response(java.lang.String) -> a
org.cryptocator.Conversation -> org.cryptocator.Conversation:
    int FIXED_INSET -> w
    org.cryptocator.FastScrollView fastScrollView -> a
    android.view.View conversationRootView -> x
    android.widget.LinearLayout titleconversation -> y
    java.util.List conversationList -> z
    java.util.List conversationListDiff -> A
    android.widget.Spinner sendspinner -> b
    java.util.HashMap mapping -> B
    int hostUid -> C
    boolean hasScrolled -> D
    int scrollItem -> E
    int maxScrollMessageItems -> F
    boolean scrolledDown -> c
    boolean scrolledUp -> G
    int conversationSize -> H
    org.cryptocator.ImagePressButton sendbutton -> I
    org.cryptocator.ImagePressButton smileybutton -> J
    org.cryptocator.ImagePressButton attachmentbutton -> K
    org.cryptocator.ImagePressButton additionbutton -> L
    org.cryptocator.ImageSmileyEditText messageText -> d
    android.widget.TextView titletext -> e
    android.view.LayoutInflater inflater -> M
    boolean additionsVisible -> N
    int lastHeight -> f
    int lastMessagTextLineCount -> g
    int currentScreenWidth -> h
    boolean screenWidthChanged -> i
    int FASTSCROLLBACKSCROLLINGBACKGROUND -> j
    int FASTSCROLLBACKLOCKEDBACKGROUND -> k
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageContextMenuProvider -> O
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageSendMenuProvider -> P
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageImageMenuProvider -> Q
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageMessageMenuProvider -> R
    boolean skipResume -> l
    java.util.List textViews -> S
    boolean isSMSModeOn -> T
    boolean isEncryptionOn -> U
    java.util.LinkedHashSet images -> V
    org.cryptocator.Conversation instance -> W
    boolean visible -> X
    long lastKeyStroke -> m
    int activeScoller -> Y
    int minWidthDiff -> Z
    int lastHeightDifferece -> aa
    boolean keyboardVisible -> ab
    int menuEnableChat -> ac
    int menuDisableChat -> ad
    int menuEnableSMS -> ae
    int menuDisableSMS -> af
    int menuSndSMSSec -> ag
    int menuSndSMS -> ah
    int menuSndMsgSec -> ai
    int menuSndMsg -> aj
    int menuContextShowAll -> ak
    int menuContextShowMore -> al
    org.cryptocator.ConversationItem imageMessageMenuItem -> n
    int imageMessageMenuRevoke -> o
    int imageMessageMenuResend -> p
    android.widget.TextView imageMessageMenuInfoText -> q
    android.graphics.Bitmap imageImageMenuBitmap -> r
    java.lang.String imageImageMenuString -> s
    java.lang.String imageImageMenuTitleAddition -> t
    java.lang.String imageImageMenuDescription -> u
    int imageImageMenuImageIndex -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    int getHostUid() -> a
    void updateTextViewWidth(org.cryptocator.ImageSmileyEditText,int) -> a
    void updateTextViewsWidth(int) -> e
    void inviteOtherUserToSMSMode(android.content.Context,int) -> m
    void inviteUserToSMSMode(android.content.Context) -> l
    void sendMessage(android.content.Context,int,boolean,java.lang.String) -> a
    void sendUnsecureSms(android.content.Context,java.lang.String) -> f
    void sendSecureSms(android.content.Context,java.lang.String) -> g
    void sendSecureMsg(android.content.Context,java.lang.String) -> h
    void sendUnsecureMsg(android.content.Context,java.lang.String) -> i
    void setTitle(java.lang.String) -> a
    boolean isSMSModeAvailable(android.content.Context) -> m
    boolean isSMSModeAvailableAndOn(android.content.Context) -> n
    void updateSendButtonImage(android.content.Context) -> o
    boolean isTyping() -> b
    boolean isTypingFast() -> c
    org.cryptocator.Conversation getInstance() -> d
    boolean isVisible() -> e
    boolean isAlive() -> f
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    void scrollOnCreateOrResume(android.content.Context) -> p
    void foceScrollDown(boolean,int) -> a
    void scrollDownAfterTypingFast(boolean) -> c
    void scrollDownAfterTypingFast(boolean,int) -> b
    void scrollDownNow(android.content.Context,boolean) -> a
    void scrollDownSoon(android.content.Context,boolean,int) -> a
    void rebuildConversationlist(android.content.Context) -> a
    void showTitlebarAsync(android.content.Context) -> b
    void updateConversationlistAsync(android.content.Context) -> c
    void updateConversationlist(android.content.Context) -> d
    void addMapping(int,int,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,android.widget.EditText,android.widget.LinearLayout,android.widget.ImageView,android.widget.ProgressBar,java.lang.String,android.view.View) -> a
    void resetMapping() -> m
    java.util.List getMapping(android.content.Context,java.lang.String) -> a
    org.cryptocator.Conversation$Mapping getMapping(android.content.Context,int) -> a
    void setSent(android.content.Context,int) -> b
    void hideMultiparts(android.content.Context,java.lang.String) -> b
    void setMultipartProgress(android.content.Context,java.lang.String,int,java.lang.String) -> a
    void setRevokedInConversation(android.content.Context,int) -> c
    void setReceived(android.content.Context,int) -> d
    void setFailedAsync(android.content.Context,int) -> e
    void setFailed(android.content.Context,int) -> f
    void setDecryptionFailed(android.content.Context,int) -> g
    void setRead(android.content.Context,int) -> h
    void resetValues(int) -> a
    android.view.View addConversationLine(android.content.Context,org.cryptocator.ConversationItem) -> d
    void possiblePromptNewSession(android.content.Context) -> q
    void sendNewSession(android.content.Context,int) -> i
    void promptNewSession(android.content.Context) -> r
    void promptMessageDetails(android.content.Context,org.cryptocator.ConversationItem) -> e
    void loadConversationList(android.content.Context,int,int) -> a
    boolean isKeyboardVisible(android.view.View) -> a
    void updateSendMenu(android.content.Context) -> s
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider createSendMenu(android.app.Activity) -> d
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider createContextMenu(android.app.Activity) -> e
    void showMessageMenu(android.app.Activity,org.cryptocator.ConversationItem) -> a
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider createMessageContextMenu(android.app.Activity,org.cryptocator.ConversationItem) -> b
    void promptResend(android.content.Context,org.cryptocator.ConversationItem) -> a
    void promptRevoke(android.content.Context,int,int,int,android.app.Activity) -> a
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider createImageContextMenu(android.app.Activity,android.graphics.Bitmap,java.lang.String,java.lang.String,java.lang.String,int) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void goBack(android.content.Context) -> e
    void doRefresh(android.content.Context) -> f
    void rebuildConversation(android.content.Context,int) -> j
    void promptSearch(android.content.Context) -> g
    void promptInfo(android.content.Context,java.lang.String,java.lang.String) -> a
    void backup(android.content.Context) -> h
    void clearConversation(android.content.Context) -> i
    void updateConversationTitleAsync(android.content.Context) -> j
    void updateConversationTitleAsync(android.content.Context,java.lang.String) -> c
    void updateConversationTitle(android.content.Context) -> k
    void updateConversationTitle(android.content.Context,java.lang.String) -> d
    void selectAttachment(android.app.Activity) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean saveImageInGallery(android.content.Context,java.lang.String,boolean,java.lang.String,java.lang.String) -> a
    void shareImage(android.content.Context,java.lang.String) -> e
    void reprocessPossibleImagesInText(android.widget.EditText) -> a
    void insertImage(android.content.Context,android.net.Uri) -> a
    void promptImageInsert(android.app.Activity,int) -> a
    void promptImageInsert2(android.app.Activity) -> b
    void takePhoto(android.app.Activity) -> f
    java.lang.String possiblyRemoveImageAttachments(android.content.Context,java.lang.String,int) -> a
    java.lang.String possiblyRemoveImageAttachments(android.content.Context,java.lang.String,boolean,java.lang.String,int) -> a
    void sendMessageOrPrompt(android.content.Context,int,boolean) -> a
    java.lang.String buildImageTitleAddition(android.content.Context,org.cryptocator.ConversationItem) -> b
    java.lang.String buildImageDescription(android.content.Context,org.cryptocator.ConversationItem) -> c
    int getImagesSize() -> g
    boolean isLastImage(int) -> b
    int registerImage(android.graphics.Bitmap,int) -> a
    void showNextImage(android.content.Context,int) -> k
    void showPreviousImage(android.content.Context,int) -> l
    int access$0() -> h
    void access$1(org.cryptocator.Conversation,android.content.Context) -> a
    boolean access$2(org.cryptocator.Conversation) -> a
    boolean access$3() -> i
    boolean access$4(org.cryptocator.Conversation) -> b
    boolean access$5() -> j
    void access$6(boolean) -> a
    android.view.View access$7(org.cryptocator.Conversation) -> c
    boolean access$8(org.cryptocator.Conversation,android.view.View) -> a
    org.cryptocator.Conversation access$9() -> k
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider access$10(org.cryptocator.Conversation,android.app.Activity) -> a
    boolean access$11(org.cryptocator.Conversation,android.content.Context) -> b
    void access$12(org.cryptocator.Conversation,android.content.Context,int,boolean) -> a
    org.cryptocator.ImagePressButton access$13(org.cryptocator.Conversation) -> d
    void access$14(boolean) -> b
    void access$15(int) -> c
    int access$16(org.cryptocator.Conversation) -> e
    java.util.List access$17(org.cryptocator.Conversation) -> f
    void access$18(org.cryptocator.Conversation,boolean) -> a
    void access$19(org.cryptocator.Conversation,int) -> a
    int access$20() -> l
    void access$21(org.cryptocator.Conversation,boolean,int) -> a
    int access$22(org.cryptocator.Conversation) -> g
    void access$23(org.cryptocator.Conversation,int) -> b
    void access$24(org.cryptocator.Conversation,boolean,int) -> b
    android.widget.LinearLayout access$25(org.cryptocator.Conversation) -> h
    void access$26(org.cryptocator.Conversation,android.content.Context,org.cryptocator.ConversationItem) -> a
    void access$27(org.cryptocator.Conversation,android.content.Context) -> c
    void access$28(org.cryptocator.Conversation,android.content.Context,int) -> a
    void access$29(org.cryptocator.Conversation,android.content.Context) -> d
    void access$30(int) -> d
    java.util.HashMap access$31(org.cryptocator.Conversation) -> i
    void access$33(android.app.Activity) -> c
    void access$34(org.cryptocator.Conversation,android.content.Context,int,boolean,java.lang.String) -> a
org.cryptocator.Conversation$1 -> org.cryptocator.t:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$10 -> org.cryptocator.u:
    org.cryptocator.Conversation this$0 -> a
    android.widget.LinearLayout val$additions -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$11 -> org.cryptocator.v:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
    org.cryptocator.Conversation access$0(org.cryptocator.Conversation$11) -> a
org.cryptocator.Conversation$11$1 -> org.cryptocator.w:
    org.cryptocator.Conversation$11 this$1 -> a
    boolean val$wasKeyboardVisible -> b
    android.app.Activity val$context -> c
    void onSelect(java.lang.String) -> a
org.cryptocator.Conversation$12 -> org.cryptocator.x:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$13 -> org.cryptocator.y:
    org.cryptocator.Conversation this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.Conversation$14 -> org.cryptocator.z:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$15 -> org.cryptocator.aa:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
org.cryptocator.Conversation$16 -> org.cryptocator.ab:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onScrollRested(org.cryptocator.FastScrollView,int,int,int,int,int,int) -> a
    void onScrollChanged(org.cryptocator.FastScrollView,int,int,int,int,int,int) -> b
    void onOversroll(boolean) -> a
    void onSnapScroll(int,boolean,boolean) -> a
org.cryptocator.Conversation$17 -> org.cryptocator.ac:
    org.cryptocator.Conversation this$0 -> a
    void onSizeChange(int,int,int,int) -> a
org.cryptocator.Conversation$18 -> org.cryptocator.ad:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onGlobalLayout() -> onGlobalLayout
org.cryptocator.Conversation$19 -> org.cryptocator.ae:
    org.cryptocator.Conversation this$0 -> a
    void selected(int,boolean) -> a
org.cryptocator.Conversation$2 -> org.cryptocator.af:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$20 -> org.cryptocator.ag:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Conversation$21 -> org.cryptocator.ah:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$22 -> org.cryptocator.ai:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$23 -> org.cryptocator.aj:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$24 -> org.cryptocator.ak:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$25 -> org.cryptocator.al:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$26 -> org.cryptocator.am:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$27 -> org.cryptocator.an:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$28 -> org.cryptocator.ao:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$29 -> org.cryptocator.ap:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$3 -> org.cryptocator.aq:
    org.cryptocator.Conversation this$0 -> a
    android.widget.LinearLayout val$titletextparent -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.cryptocator.Conversation$3$1 -> org.cryptocator.ar:
    org.cryptocator.Conversation$3 this$1 -> a
    android.widget.LinearLayout val$titletextparent -> b
    void run() -> run
org.cryptocator.Conversation$30 -> org.cryptocator.as:
    org.cryptocator.Conversation this$0 -> a
    boolean val$showKeyboard -> b
    int val$scrollNumber -> c
    void run() -> run
org.cryptocator.Conversation$31 -> org.cryptocator.at:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    boolean val$showKeyboard -> c
    int val$delay -> d
    void run() -> run
org.cryptocator.Conversation$32 -> org.cryptocator.au:
    org.cryptocator.Conversation this$0 -> a
    void run() -> run
org.cryptocator.Conversation$33 -> org.cryptocator.av:
    android.content.Context val$context -> a
    void run() -> run
org.cryptocator.Conversation$34 -> org.cryptocator.aw:
    android.content.Context val$context -> a
    int val$localid -> b
    void run() -> run
org.cryptocator.Conversation$35 -> org.cryptocator.ax:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    org.cryptocator.ConversationItem val$conversationItem -> c
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.Conversation$36 -> org.cryptocator.ay:
    org.cryptocator.Conversation this$0 -> a
    org.cryptocator.ConversationItem val$conversationItem -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$37 -> org.cryptocator.az:
    org.cryptocator.Conversation this$0 -> a
    void selected(int,boolean) -> a
org.cryptocator.Conversation$38 -> org.cryptocator.ba:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    boolean val$noSMSOption -> c
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
    org.cryptocator.Conversation access$0(org.cryptocator.Conversation$38) -> a
org.cryptocator.Conversation$38$1 -> org.cryptocator.bb:
    org.cryptocator.Conversation$38 this$1 -> a
    android.content.Context val$context -> b
    org.cryptocator.MessageAlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$38$2 -> org.cryptocator.bc:
    org.cryptocator.Conversation$38 this$1 -> a
    android.content.Context val$context -> b
    org.cryptocator.MessageAlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$39 -> org.cryptocator.bd:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$4 -> org.cryptocator.be:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$40 -> org.cryptocator.bf:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$41 -> org.cryptocator.bg:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$42 -> org.cryptocator.bh:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$43 -> org.cryptocator.bi:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$44 -> org.cryptocator.bj:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$45 -> org.cryptocator.bk:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$46 -> org.cryptocator.bl:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$47 -> org.cryptocator.bm:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$48 -> org.cryptocator.bn:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$49 -> org.cryptocator.bo:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$5 -> org.cryptocator.bp:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$50 -> org.cryptocator.bq:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$51 -> org.cryptocator.br:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$52 -> org.cryptocator.bs:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$53 -> org.cryptocator.bt:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$54 -> org.cryptocator.bu:
    org.cryptocator.Conversation this$0 -> a
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$55 -> org.cryptocator.bv:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$56 -> org.cryptocator.bw:
    org.cryptocator.Conversation this$0 -> a
    android.view.View provideView(android.content.Context) -> a
org.cryptocator.Conversation$57 -> org.cryptocator.bx:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$activity -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$58 -> org.cryptocator.by:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$activity -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$59 -> org.cryptocator.bz:
    org.cryptocator.Conversation this$0 -> a
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$59$1 -> org.cryptocator.ca:
    org.cryptocator.Conversation$59 this$1 -> a
    void run() -> run
org.cryptocator.Conversation$6 -> org.cryptocator.cb:
    org.cryptocator.Conversation this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$60 -> org.cryptocator.cc:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$activity -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$61 -> org.cryptocator.cd:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$activity -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$62 -> org.cryptocator.ce:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$activity -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$63 -> org.cryptocator.cf:
    org.cryptocator.ConversationItem val$conversationItem -> a
    android.content.Context val$context -> b
    java.lang.String val$name -> c
    void onSend(boolean,boolean,int) -> a
org.cryptocator.Conversation$63$1 -> org.cryptocator.cg:
    org.cryptocator.Conversation$63 this$1 -> a
    android.content.Context val$context -> b
    void run() -> run
org.cryptocator.Conversation$64 -> org.cryptocator.ch:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    int val$mid -> c
    int val$localid -> d
    int val$toHostUid -> e
    void selected(int,boolean) -> a
org.cryptocator.Conversation$65 -> org.cryptocator.ci:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$66 -> org.cryptocator.cj:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$67 -> org.cryptocator.ck:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$68 -> org.cryptocator.cl:
    org.cryptocator.Conversation this$0 -> a
    android.app.Activity val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Conversation$69 -> org.cryptocator.cm:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
org.cryptocator.Conversation$7 -> org.cryptocator.cn:
    org.cryptocator.Conversation this$0 -> a
    boolean noHangNeeded() -> a
org.cryptocator.Conversation$70 -> org.cryptocator.co:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    int val$lastFound -> c
    void selected(org.cryptocator.MessageInputDialog,int,boolean,java.lang.String) -> a
org.cryptocator.Conversation$71 -> org.cryptocator.cp:
    void selected(int,boolean) -> a
org.cryptocator.Conversation$72 -> org.cryptocator.cq:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Conversation$73 -> org.cryptocator.cr:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$titleText -> c
    void run() -> run
org.cryptocator.Conversation$74 -> org.cryptocator.cs:
    org.cryptocator.Conversation this$0 -> a
    boolean val$wasScrolledDown -> b
    android.content.Context val$context -> c
    boolean val$keyboardWasVisible -> d
    void onImport(java.lang.String) -> a
org.cryptocator.Conversation$76 -> org.cryptocator.ct:
    org.cryptocator.Conversation this$0 -> a
    boolean val$wasScrolledDown -> b
    android.content.Context val$context -> c
    boolean val$keyboardWasVisible -> d
    void onImport(java.lang.String) -> a
org.cryptocator.Conversation$78 -> org.cryptocator.cu:
    android.app.Activity val$activity -> a
    void selected(int,boolean) -> a
org.cryptocator.Conversation$79 -> org.cryptocator.cv:
    void selected(int,boolean) -> a
org.cryptocator.Conversation$8 -> org.cryptocator.cw:
    org.cryptocator.Conversation this$0 -> a
    void onPaste() -> a
    void onCut() -> b
    void onCopy() -> c
org.cryptocator.Conversation$80 -> org.cryptocator.cx:
    android.app.Activity val$activity -> a
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
org.cryptocator.Conversation$80$1 -> org.cryptocator.cy:
    org.cryptocator.Conversation$80 this$1 -> a
    android.app.Activity val$activity -> b
    org.cryptocator.MessageAlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$80$2 -> org.cryptocator.cz:
    org.cryptocator.Conversation$80 this$1 -> a
    android.app.Activity val$activity -> b
    org.cryptocator.MessageAlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Conversation$81 -> org.cryptocator.da:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    int val$transport -> c
    boolean val$encrypted -> d
    java.lang.String val$messageTextString2 -> e
    void selected(int,boolean) -> a
org.cryptocator.Conversation$82 -> org.cryptocator.db:
    org.cryptocator.Conversation this$0 -> a
    android.content.Context val$context -> b
    int val$transport -> c
    boolean val$encrypted -> d
    java.lang.String val$messageTextString -> e
    void selected(int,boolean) -> a
org.cryptocator.Conversation$9 -> org.cryptocator.dc:
    org.cryptocator.Conversation this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
org.cryptocator.Conversation$Mapping -> org.cryptocator.dd:
    android.view.View parent -> a
    java.lang.String multipartid -> b
    android.widget.ProgressBar progress -> c
    android.widget.ImageView speech -> d
    android.widget.LinearLayout oneline -> e
    android.widget.ImageView sent -> f
    android.widget.ImageView received -> g
    android.widget.ImageView read -> h
    android.widget.EditText text -> i
    org.cryptocator.Conversation this$0 -> j
org.cryptocator.Conversation$OnSendListener -> org.cryptocator.de:
    void onSend(boolean,boolean,int) -> a
org.cryptocator.ConversationCompose -> org.cryptocator.ConversationCompose:
    android.widget.LinearLayout conversationRootView -> f
    android.widget.Spinner sendspinner -> a
    org.cryptocator.ImagePressButton sendbutton -> g
    org.cryptocator.ImagePressButton smileybutton -> h
    org.cryptocator.ImagePressButton attachmentbutton -> i
    org.cryptocator.ImagePressButton additionbutton -> j
    org.cryptocator.ImagePressButton phonebutton -> k
    org.cryptocator.ImageSmileyEditText messageText -> b
    android.widget.EditText phoneOrUid -> c
    int hostUid -> d
    org.cryptocator.FastScrollView toList -> e
    boolean additionsVisible -> l
    boolean lastOrientationLandscape -> m
    boolean orientationChanged -> n
    org.cryptocator.ConversationCompose instance -> o
    boolean visible -> p
    boolean alive -> q
    java.util.HashMap userRadioMapping -> r
    java.util.HashMap userOrderMapping -> s
    int minWidthDiff -> t
    int lastHeightDifferece -> u
    boolean keyboardVisible -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void updateSendspinner(android.content.Context,android.widget.ArrayAdapter,android.widget.ArrayAdapter) -> a
    android.widget.ArrayAdapter getMyDataAdatpter(java.lang.String[]) -> a
    int getCurrentUid(android.content.Context) -> c
    void sendMessage(android.content.Context) -> d
    void sendMessagePrompt(android.content.Context,boolean,boolean) -> a
    void sendMessagePrompt(android.content.Context,boolean,boolean,int,java.lang.String,java.lang.String,org.cryptocator.Conversation$OnSendListener) -> a
    org.cryptocator.Conversation$OnSendListener getSendListener(android.content.Context,int) -> a
    void sendMessageOrPrompt(android.content.Context,int,boolean,int,java.lang.String,org.cryptocator.Conversation$OnSendListener) -> b
    void sendMessage(android.content.Context,int,boolean,java.lang.String,int,org.cryptocator.Conversation$OnSendListener) -> b
    boolean isAlive() -> a
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    void parseAndMarkUserRadio(java.lang.String,int) -> a
    int parsePhoneOrUid(java.lang.String) -> a
    void markUserRadio(int,int) -> a
    void buildToList(android.content.Context) -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void goBack(android.content.Context) -> a
    void updateSendButtonImage(android.content.Context) -> b
    boolean isKeyboardVisible(android.view.View) -> a
    void potentiallyShowKeyboard(android.content.Context,boolean) -> a
    void insertImage(android.content.Context,android.net.Uri,boolean) -> a
    boolean access$0() -> b
    void access$1(boolean) -> a
    android.widget.LinearLayout access$2(org.cryptocator.ConversationCompose) -> a
    boolean access$3(org.cryptocator.ConversationCompose,android.view.View) -> a
    int access$4(org.cryptocator.ConversationCompose,android.content.Context) -> a
    void access$5(org.cryptocator.ConversationCompose,android.content.Context) -> b
    org.cryptocator.ImagePressButton access$6(org.cryptocator.ConversationCompose) -> b
    boolean access$7(org.cryptocator.ConversationCompose) -> c
    void access$8(org.cryptocator.ConversationCompose,boolean) -> a
    void access$9(org.cryptocator.ConversationCompose,boolean) -> b
    boolean access$10(org.cryptocator.ConversationCompose) -> d
    void access$11(org.cryptocator.ConversationCompose,android.content.Context,android.widget.ArrayAdapter,android.widget.ArrayAdapter) -> a
    void access$12(android.content.Context,int,boolean,int,java.lang.String,org.cryptocator.Conversation$OnSendListener) -> a
    void access$13(android.content.Context,int,boolean,java.lang.String,int,org.cryptocator.Conversation$OnSendListener) -> a
    void access$14(org.cryptocator.ConversationCompose,int,int) -> a
org.cryptocator.ConversationCompose$1 -> org.cryptocator.df:
    org.cryptocator.ConversationCompose this$0 -> a
    android.app.Activity val$activity -> b
    android.net.Uri val$attachmentPath -> c
    void run() -> run
org.cryptocator.ConversationCompose$1$1 -> org.cryptocator.dg:
    org.cryptocator.ConversationCompose$1 this$1 -> a
    android.app.Activity val$activity -> b
    android.net.Uri val$attachmentPath -> c
    void run() -> run
org.cryptocator.ConversationCompose$10 -> org.cryptocator.dh:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
org.cryptocator.ConversationCompose$11 -> org.cryptocator.di:
    org.cryptocator.ConversationCompose this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$12 -> org.cryptocator.dj:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
org.cryptocator.ConversationCompose$13 -> org.cryptocator.dk:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    void onGlobalLayout() -> onGlobalLayout
    org.cryptocator.ConversationCompose access$0(org.cryptocator.ConversationCompose$13) -> a
org.cryptocator.ConversationCompose$13$1 -> org.cryptocator.dl:
    org.cryptocator.ConversationCompose$13 this$1 -> a
    void run() -> run
org.cryptocator.ConversationCompose$14 -> org.cryptocator.dm:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    android.widget.ArrayAdapter val$dataAdapterONLYSMS -> c
    android.widget.ArrayAdapter val$dataAdapterONLYSMSChat -> d
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.cryptocator.ConversationCompose$15 -> org.cryptocator.dn:
    org.cryptocator.ConversationCompose this$0 -> a
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
org.cryptocator.ConversationCompose$16 -> org.cryptocator.do:
    void selected(int,boolean) -> a
org.cryptocator.ConversationCompose$17 -> org.cryptocator.dp:
    android.content.Context val$context -> a
    boolean val$sms -> b
    boolean val$encryption -> c
    int val$uid -> d
    java.lang.String val$messageTextString -> e
    org.cryptocator.Conversation$OnSendListener val$sendListener -> f
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
org.cryptocator.ConversationCompose$17$1 -> org.cryptocator.dq:
    org.cryptocator.ConversationCompose$17 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    java.lang.String val$messageTextString -> d
    org.cryptocator.Conversation$OnSendListener val$sendListener -> e
    org.cryptocator.MessageAlertDialog val$dialog -> f
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$17$2 -> org.cryptocator.dr:
    org.cryptocator.ConversationCompose$17 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    java.lang.String val$messageTextString -> d
    org.cryptocator.Conversation$OnSendListener val$sendListener -> e
    org.cryptocator.MessageAlertDialog val$dialog -> f
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$17$3 -> org.cryptocator.ds:
    org.cryptocator.ConversationCompose$17 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    java.lang.String val$messageTextString -> d
    org.cryptocator.Conversation$OnSendListener val$sendListener -> e
    org.cryptocator.MessageAlertDialog val$dialog -> f
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$17$4 -> org.cryptocator.dt:
    org.cryptocator.ConversationCompose$17 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    java.lang.String val$messageTextString -> d
    org.cryptocator.Conversation$OnSendListener val$sendListener -> e
    org.cryptocator.MessageAlertDialog val$dialog -> f
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$18 -> org.cryptocator.du:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$name -> c
    void onSend(boolean,boolean,int) -> a
org.cryptocator.ConversationCompose$19 -> org.cryptocator.dv:
    android.content.Context val$context -> a
    int val$transport -> b
    boolean val$encrypted -> c
    java.lang.String val$messageTextString2 -> d
    int val$uid -> e
    org.cryptocator.Conversation$OnSendListener val$sendListener -> f
    void selected(int,boolean) -> a
org.cryptocator.ConversationCompose$2 -> org.cryptocator.dw:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$20 -> org.cryptocator.dx:
    android.content.Context val$context -> a
    int val$transport -> b
    boolean val$encrypted -> c
    java.lang.String val$messageTextString -> d
    int val$uid -> e
    org.cryptocator.Conversation$OnSendListener val$sendListener -> f
    void selected(int,boolean) -> a
org.cryptocator.ConversationCompose$21 -> org.cryptocator.dy:
    org.cryptocator.ConversationCompose this$0 -> a
    int val$scrollItem -> b
    void run() -> run
org.cryptocator.ConversationCompose$22 -> org.cryptocator.dz:
    org.cryptocator.ConversationCompose this$0 -> a
    int val$uid -> b
    android.content.Context val$context -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$23 -> org.cryptocator.ea:
    org.cryptocator.ConversationCompose this$0 -> a
    boolean val$keyboardWasVisible -> b
    android.content.Context val$context -> c
    void onImport(java.lang.String) -> a
org.cryptocator.ConversationCompose$24 -> org.cryptocator.eb:
    org.cryptocator.ConversationCompose this$0 -> a
    void run() -> run
org.cryptocator.ConversationCompose$25 -> org.cryptocator.ec:
    org.cryptocator.ConversationCompose this$0 -> a
    boolean val$keyboardWasVisible -> b
    android.content.Context val$context -> c
    void onImport(java.lang.String) -> a
org.cryptocator.ConversationCompose$3 -> org.cryptocator.ed:
    org.cryptocator.ConversationCompose this$0 -> a
    void onPaste() -> a
    void onCut() -> b
    void onCopy() -> c
org.cryptocator.ConversationCompose$4 -> org.cryptocator.ee:
    org.cryptocator.ConversationCompose this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
org.cryptocator.ConversationCompose$5 -> org.cryptocator.ef:
    org.cryptocator.ConversationCompose this$0 -> a
    android.widget.LinearLayout val$additions -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$6 -> org.cryptocator.eg:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
    org.cryptocator.ConversationCompose access$0(org.cryptocator.ConversationCompose$6) -> a
org.cryptocator.ConversationCompose$6$1 -> org.cryptocator.eh:
    org.cryptocator.ConversationCompose$6 this$1 -> a
    boolean val$wasKeyboardVisible -> b
    android.content.Context val$context -> c
    void onSelect(java.lang.String) -> a
org.cryptocator.ConversationCompose$7 -> org.cryptocator.ei:
    org.cryptocator.ConversationCompose this$0 -> a
    android.app.Activity val$activity -> b
    android.content.Context val$context -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationCompose$8 -> org.cryptocator.ej:
    org.cryptocator.ConversationCompose this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.ConversationCompose$9 -> org.cryptocator.ek:
    org.cryptocator.ConversationCompose this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.ConversationItem -> org.cryptocator.el:
    int sendingid -> a
    int localid -> b
    int mid -> c
    int from -> d
    int to -> e
    java.lang.String text -> f
    long created -> g
    long sent -> h
    long received -> i
    long read -> j
    long revoked -> k
    boolean encrypted -> l
    int transport -> m
    boolean isKey -> n
    boolean system -> o
    int smsfailcnt -> p
    boolean smsfailed -> q
    long lasttry -> r
    int tries -> s
    int parts -> t
    int part -> u
    java.lang.String multipartid -> v
    boolean me() -> a
    boolean readyToProcess() -> b
org.cryptocator.DB -> org.cryptocator.em:
    java.util.HashMap lastReceivedMid -> a
    int SMS_MID -> b
    int TRANSPORT_INTERNET -> c
    int TRANSPORT_SMS -> d
    int PRIORITY_READCONFIRMATION -> e
    int PRIORITY_FAILEDTODECRYPT -> f
    int PRIORITY_MESSAGE -> g
    int PRIORITY_KEY -> h
    long MAXTIMESTAMP -> i
    java.lang.String REVOKEDTEXT -> j
    java.lang.String SMS_FAILED -> k
    java.lang.String NO_MULTIPART_ID -> l
    int DEFAULT_MESSAGEPART -> m
    int MULTIPART_TIMEOUT -> n
    int DEFAULT_MYSELF_UID -> o
    java.util.HashMap myUid -> r
    int cachedConversationSize -> s
    java.util.HashMap largestTimestampReceived -> p
    java.util.HashMap largestTimestampRead -> q
    int myUid(android.content.Context,int) -> a
    int myUid() -> a
    java.lang.String getTimestampString() -> b
    long getTimestamp() -> c
    long parseTimestamp(java.lang.String) -> a
    long parseTimestamp(java.lang.String,long) -> a
    java.lang.String getDateString(long,boolean) -> a
    android.database.sqlite.SQLiteDatabase openDB(android.content.Context,int) -> b
    android.database.sqlite.SQLiteDatabase openDBSending(android.content.Context) -> a
    android.database.sqlite.SQLiteDatabase openDBSent(android.content.Context) -> b
    void dropDB(android.content.Context,int) -> c
    void dropDBSending(android.content.Context) -> c
    void dropDBSent(android.content.Context) -> d
    void initializeDB(android.content.Context,android.database.sqlite.SQLiteDatabase) -> a
    void initializeDBSending(android.content.Context,android.database.sqlite.SQLiteDatabase) -> b
    void initializeDBSent(android.content.Context,android.database.sqlite.SQLiteDatabase) -> c
    void askToRebuildDB(android.content.Context,int) -> y
    void tryRepairDB(android.content.Context,int) -> d
    void rebuildDBSending(android.content.Context) -> e
    void rebuildDBSent(android.content.Context) -> j
    void ensureDBInitialized(android.content.Context,java.util.List) -> a
    boolean revokeFromSending(android.content.Context,int) -> e
    void removeOldMappings(android.content.Context) -> f
    int clearSelective(android.content.Context,int,java.lang.String) -> a
    void removeMappingByMid(android.content.Context,int) -> f
    void removeMappingByHostUid(android.content.Context,int) -> g
    int getNumberOfMessagesToSend(android.content.Context,int) -> h
    int getPositionInSendingQueue(android.content.Context,int,int,int) -> a
    int getHostUidForMid(android.content.Context,int) -> i
    boolean addMapping(android.content.Context,int,int) -> a
    boolean removeSentMessageByLocalId(android.content.Context,int) -> j
    boolean removeSentMessage(android.content.Context,int) -> k
    boolean addSendMessage(android.content.Context,int,java.lang.String,boolean,int,boolean,int) -> a
    java.util.Set getRecentMultipartIds(android.content.Context,int) -> l
    boolean isMultipartDuplicate(android.content.Context,int,java.lang.String) -> b
    void cleanMultipartDuplicates(android.content.Context,int) -> m
    boolean combineMultiPartMessage(android.content.Context,org.cryptocator.ConversationItem) -> a
    org.cryptocator.DB$MultiPartInfo getMultiPartInfo(java.lang.String) -> b
    boolean addSendMessage(android.content.Context,int,java.lang.String,boolean,int,boolean,int,org.cryptocator.ConversationItem) -> a
    boolean addSendMultipartMessage(android.content.Context,int,java.lang.String,java.lang.String,boolean,int,boolean,int,org.cryptocator.ConversationItem,int,int,java.lang.String) -> a
    java.util.Set getReceivedMultiparts(android.content.Context,java.lang.String,int) -> a
    int getPercentReceivedComplete(android.content.Context,java.lang.String,int,int) -> a
    int getPercentSentComplete(android.content.Context,java.lang.String) -> a
    int addMessage(android.content.Context,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,int,int,java.lang.String) -> a
    void cleanupDBSending(android.content.Context) -> g
    void printDB(android.content.Context,int) -> n
    java.lang.String printDBSending(android.content.Context) -> h
    int getConversationSize(android.content.Context,int,boolean) -> a
    void loadConversation(android.content.Context,int,java.util.List,int) -> a
    boolean isTableExists(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    long getLargestTimestampReceived(android.content.Context,int) -> o
    int getLastSentKeyMessage(android.content.Context,int,boolean) -> b
    void updateLargestTimestampReceived(android.content.Context,java.lang.String,int) -> b
    long getLargestTimestampRead(android.content.Context,int) -> p
    void updateLargestTimestampRead(android.content.Context,java.lang.String,int) -> c
    int getLargestMidForUIDExceptSystemMessages(android.content.Context,int) -> q
    void resetLargestMid(android.content.Context,int,int) -> b
    boolean updateLargestMid(android.content.Context,int,int) -> c
    int getLargestMid(android.content.Context,int) -> r
    org.cryptocator.ConversationItem getNextMessage(android.content.Context,int,int) -> d
    org.cryptocator.ConversationItem getMessage(android.content.Context,int,int,int) -> b
    int getSenderUidByMid(android.content.Context,int,int) -> e
    int getHostLocalIdByMid(android.content.Context,int,int) -> f
    int getUidByMid(android.content.Context,int,boolean) -> c
    boolean updateOwnMessageRead(android.content.Context,int) -> s
    boolean updateMessageRead(android.content.Context,int,java.lang.String,int) -> a
    void tryToRevokeMessage(android.content.Context,int,int,java.lang.String,int) -> a
    boolean updateMessageRevoked(android.content.Context,int,java.lang.String,int) -> b
    boolean updateMessageSystem(android.content.Context,int,boolean,int) -> a
    boolean updateMessageFailed(android.content.Context,int,int) -> g
    int getfailed(android.content.Context,int) -> t
    boolean incrementFailed(android.content.Context,int) -> u
    int getTries(android.content.Context,int) -> v
    boolean incrementTries(android.content.Context,int) -> w
    boolean updateMessageReceived(android.content.Context,int,java.lang.String,int) -> c
    boolean isAlreadyInDB(android.content.Context,int,int) -> h
    boolean updateMessage(android.content.Context,org.cryptocator.ConversationItem,int) -> a
    boolean updateMessage(android.content.Context,org.cryptocator.ConversationItem,int,boolean) -> a
    void deleteUser(android.content.Context,int) -> x
    boolean mergeUser(android.content.Context,int,int) -> i
    void possiblyUpdate(android.content.Context) -> i
org.cryptocator.DB$1 -> org.cryptocator.en:
    android.content.Context val$context -> a
    int val$uid -> b
    void run() -> run
org.cryptocator.DB$1$1 -> org.cryptocator.eo:
    org.cryptocator.DB$1 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    void run() -> run
org.cryptocator.DB$1$1$1 -> org.cryptocator.ep:
    org.cryptocator.DB$1$1 this$2 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    void selected(int,boolean) -> a
org.cryptocator.DB$2 -> org.cryptocator.eq:
    android.content.Context val$context -> a
    void run() -> run
org.cryptocator.DB$MultiPartInfo -> org.cryptocator.er:
    java.lang.String mulitpartid -> a
    int part -> b
    int parts -> c
    java.lang.String text -> d
org.cryptocator.FastScrollBar -> org.cryptocator.es:
    long lockedTimestamp -> a
    int snapUp -> c
    int snapDown -> d
    int currentProgress -> e
    int NOSNAP -> b
    org.cryptocator.FastScrollBar$OnScrollListener scrollListener -> f
    void setOnScrollListener(org.cryptocator.FastScrollBar$OnScrollListener) -> setOnScrollListener
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setThumb(android.graphics.drawable.Drawable) -> setThumb
    void onMeasure(int,int) -> onMeasure
    void setSnapDown(int) -> setSnapDown
    void setSnapUp(int) -> setSnapUp
    boolean isLocked() -> a
    void setProgress(int) -> setProgress
    void onDraw(android.graphics.Canvas) -> onDraw
    long getTimestamp() -> getTimestamp
    int getCurrentProgress() -> getCurrentProgress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
org.cryptocator.FastScrollBar$OnScrollListener -> org.cryptocator.et:
    void onScroll(int) -> a
    void onSnapScroll(int,boolean,boolean) -> a
org.cryptocator.FastScrollView -> org.cryptocator.FastScrollView:
    android.widget.LinearLayout innerChilds -> f
    org.cryptocator.ScrollViewEx scrollView -> g
    org.cryptocator.FastScrollBar scrollBar -> h
    java.util.List childList -> i
    boolean heightsInvalidate -> j
    int lockedPos -> a
    java.util.List heights -> b
    int heightsSum -> c
    int allowOneLayoutOverride -> d
    org.cryptocator.FastScrollView$OnLayoutDoneListener layoutDoneListener -> k
    org.cryptocator.FastScrollView$OnScrollListener scrollListener -> l
    org.cryptocator.FastScrollView$OnSizeChangeListener sizeChangeListener -> m
    org.cryptocator.FastScrollView$OnNoHangListener noHangListener -> n
    int deferredScrolling -> e
    int postL -> o
    int postT -> p
    int postR -> q
    int postB -> r
    void setOnLayoutDoneListener(org.cryptocator.FastScrollView$OnLayoutDoneListener) -> setOnLayoutDoneListener
    void setOnScrollListener(org.cryptocator.FastScrollView$OnScrollListener) -> setOnScrollListener
    void setOnSizeChangeListener(org.cryptocator.FastScrollView$OnSizeChangeListener) -> setOnSizeChangeListener
    void setOnNoHangListener(org.cryptocator.FastScrollView$OnNoHangListener) -> setOnNoHangListener
    void createInnerViews(android.content.Context) -> a
    void scrollToItem(int) -> a
    void scrollToPercent(int) -> b
    void scrollUp() -> a
    void scrollDown() -> b
    void resetFastScrollBar() -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateScrollBar() -> h
    int getPercentToPos(int) -> c
    int getPosToPercent(int) -> d
    void updateFastScrollBar(int,boolean) -> a
    void addChild(android.view.View) -> a
    void clearChilds() -> c
    void potentiallyRefreshState(boolean) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void measureHeights() -> i
    int getItemToPos(int) -> e
    int getPosToItem(int) -> f
    int getMaxPosition() -> getMaxPosition
    int getMaxHeight() -> getMaxHeight
    int getVisibleHeight() -> getVisibleHeight
    void lockPosition() -> d
    boolean isLocked() -> e
    void restoreLockedPosition() -> f
    void setScrollBackground(int) -> setScrollBackground
    boolean isNoHangNeeded() -> j
    void setSnapDown(int) -> setSnapDown
    void setSnapUp(int) -> setSnapUp
    org.cryptocator.FastScrollView$OnScrollListener access$0(org.cryptocator.FastScrollView) -> a
    boolean access$1(org.cryptocator.FastScrollView) -> b
    void access$2(org.cryptocator.FastScrollView,int,boolean) -> a
    void access$3(org.cryptocator.FastScrollView) -> c
    org.cryptocator.FastScrollBar access$4(org.cryptocator.FastScrollView) -> d
org.cryptocator.FastScrollView$1 -> org.cryptocator.eu:
    org.cryptocator.FastScrollView this$0 -> a
    void onScroll(int) -> a
    void onSnapScroll(int,boolean,boolean) -> a
org.cryptocator.FastScrollView$2 -> org.cryptocator.ev:
    org.cryptocator.FastScrollView this$0 -> a
    org.cryptocator.FastScrollView val$instance -> b
    void onScrollChanged(org.cryptocator.ScrollViewEx,int,int,int,int) -> a
    void onScrollRested(org.cryptocator.ScrollViewEx,int,int,int,int) -> b
    void onOversroll(boolean) -> a
org.cryptocator.FastScrollView$3 -> org.cryptocator.ew:
    org.cryptocator.FastScrollView this$0 -> a
    int val$lockedPosCopy -> b
    void run() -> run
org.cryptocator.FastScrollView$4 -> org.cryptocator.ex:
    org.cryptocator.FastScrollView this$0 -> a
    int val$color -> b
    void run() -> run
org.cryptocator.FastScrollView$OnLayoutDoneListener -> org.cryptocator.ey:
    void doneLayout() -> a
org.cryptocator.FastScrollView$OnNoHangListener -> org.cryptocator.ez:
    boolean noHangNeeded() -> a
org.cryptocator.FastScrollView$OnScrollListener -> org.cryptocator.fa:
    void onScrollChanged(org.cryptocator.FastScrollView,int,int,int,int,int,int) -> b
    void onScrollRested(org.cryptocator.FastScrollView,int,int,int,int,int,int) -> a
    void onSnapScroll(int,boolean,boolean) -> a
    void onOversroll(boolean) -> a
org.cryptocator.FastScrollView$OnSizeChangeListener -> org.cryptocator.fb:
    void onSizeChange(int,int,int,int) -> a
org.cryptocator.HeadlessSmsSendService -> org.cryptocator.HeadlessSmsSendService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
org.cryptocator.HttpStringRequest -> org.cryptocator.fc:
    org.cryptocator.HttpStringRequest$OnResponseListener listener -> a
    java.lang.String getData(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String getContentAsString(org.apache.http.HttpResponse) -> a
    org.cryptocator.HttpStringRequest$OnResponseListener access$0(org.cryptocator.HttpStringRequest) -> a
org.cryptocator.HttpStringRequest$OnResponseListener -> org.cryptocator.fd:
    void response(java.lang.String) -> a
org.cryptocator.HttpStringRequest$UrlThread -> org.cryptocator.fe:
    boolean postRequest -> a
    android.content.Context context -> b
    java.lang.String url -> c
    org.cryptocator.HttpStringRequest this$0 -> d
    void run() -> run
org.cryptocator.ImageContextMenu -> org.cryptocator.ImageContextMenu:
    int BACKGROUND -> a
    int CLICKED_COLOR -> b
    int NOTCLICKED_COLOR -> c
    int CLICKDURATION -> d
    android.app.Activity activity -> e
    android.content.Context context -> f
    android.app.AlertDialog alertDialog -> g
    boolean cancel -> h
    boolean handled -> i
    org.cryptocator.ImageContextMenu instance -> j
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageContextMenuProvider -> k
    long showTime -> l
    void setImageContextMenuProvider(org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> a
    void show(android.content.Context,org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> a
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void onPause() -> onPause
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreate(android.os.Bundle) -> onCreate
    long access$0(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.ImageContextMenu$1 -> org.cryptocator.ff:
    org.cryptocator.ImageContextMenu this$0 -> a
    android.widget.LinearLayout val$entryLayout -> b
    org.cryptocator.ImageContextMenu$ImageContextMenuSelectionListener val$listener -> c
    void onClick(android.view.View) -> onClick
    org.cryptocator.ImageContextMenu access$0(org.cryptocator.ImageContextMenu$1) -> a
org.cryptocator.ImageContextMenu$1$1 -> org.cryptocator.fg:
    org.cryptocator.ImageContextMenu$1 this$1 -> a
    android.widget.LinearLayout val$entryLayout -> b
    boolean val$shouldClose -> c
    void run() -> run
org.cryptocator.ImageContextMenu$2 -> org.cryptocator.fh:
    org.cryptocator.ImageContextMenu this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.cryptocator.ImageContextMenu$3 -> org.cryptocator.fi:
    org.cryptocator.ImageContextMenu this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.cryptocator.ImageContextMenu$ExtendedEntryViewProvider -> org.cryptocator.fj:
    android.view.View provideView(android.content.Context) -> a
org.cryptocator.ImageContextMenu$ImageContextMenuProvider -> org.cryptocator.fk:
    java.util.List captions -> a
    java.util.List icons -> b
    java.util.List viewProviders -> c
    java.util.List imageContextMenuSelectionListeners -> d
    java.util.HashMap entryVisible -> e
    java.util.HashMap entryEnabled -> f
    java.lang.String title -> g
    android.graphics.drawable.Drawable icon -> h
    android.content.Context context -> i
    int textSize -> j
    void setTitle(java.lang.String) -> a
    int addEntry(java.lang.String,int,org.cryptocator.ImageContextMenu$ImageContextMenuSelectionListener) -> a
    int addEntry(org.cryptocator.ImageContextMenu$ExtendedEntryViewProvider,org.cryptocator.ImageContextMenu$ImageContextMenuSelectionListener) -> a
    void setVisible(int,boolean) -> a
    java.lang.String getCaption(int) -> a
    android.graphics.drawable.Drawable getIcon(int) -> b
    org.cryptocator.ImageContextMenu$ExtendedEntryViewProvider getViewProvider(int) -> c
    boolean isVisible(int) -> d
    boolean isEnabled(int) -> e
    java.lang.String access$0(org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> a
    android.graphics.drawable.Drawable access$1(org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> b
    java.util.List access$2(org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> c
    int access$3(org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> d
    java.util.List access$4(org.cryptocator.ImageContextMenu$ImageContextMenuProvider) -> e
org.cryptocator.ImageContextMenu$ImageContextMenuSelectionListener -> org.cryptocator.fl:
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.ImageFullscreenActivity -> org.cryptocator.ImageFullscreenActivity:
    android.graphics.Bitmap bitmap -> a
    int imageIndex -> b
    android.widget.ImageView imageView -> c
    android.app.Activity activity -> d
    android.content.Context context -> e
    boolean toggleZoomToFit -> g
    android.widget.LinearLayout$LayoutParams lpImage -> h
    android.widget.LinearLayout$LayoutParams lpImageZoomed -> i
    boolean visible -> f
    int swipeStartPosition -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void showFullscreenImage(android.content.Context,android.graphics.Bitmap,int) -> a
    boolean access$0() -> a
    void access$1(boolean) -> a
    android.widget.LinearLayout$LayoutParams access$2(org.cryptocator.ImageFullscreenActivity) -> a
    android.widget.LinearLayout$LayoutParams access$3(org.cryptocator.ImageFullscreenActivity) -> b
    void access$4(org.cryptocator.ImageFullscreenActivity,int) -> a
    int access$5(org.cryptocator.ImageFullscreenActivity) -> c
org.cryptocator.ImageFullscreenActivity$1 -> org.cryptocator.fm:
    org.cryptocator.ImageFullscreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.ImageFullscreenActivity$2 -> org.cryptocator.fn:
    org.cryptocator.ImageFullscreenActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.ImageFullscreenActivity$3 -> org.cryptocator.fo:
    org.cryptocator.ImageFullscreenActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.cryptocator.ImageLabelButton -> org.cryptocator.ImageLabelButton:
    java.lang.String text -> a
    int DEFAULTTEXTCOLOR -> b
    int textSize -> c
    int height -> d
    int marginDown -> e
    int marginUp -> f
    int width -> g
    android.graphics.Paint paint -> h
    void setTextAndImageResource(java.lang.String,int) -> a
    void setTextAndImageResource(java.lang.String,int,int) -> a
    void recalculateTextSize(java.lang.String,int) -> b
    void setMarginDown(int) -> setMarginDown
    void setMarginUp(int) -> setMarginUp
    void setTextColor(int) -> setTextColor
    void setImageURI(android.net.Uri) -> setImageURI
    void setImageResource(int) -> setImageResource
    void setImageResourceInternal(int) -> setImageResourceInternal
    void onDraw(android.graphics.Canvas) -> onDraw
org.cryptocator.ImagePressButton -> org.cryptocator.ImagePressButton:
    android.graphics.Bitmap original -> a
    android.graphics.Bitmap pressed -> b
    android.graphics.drawable.Drawable dOriginal -> c
    android.graphics.drawable.Drawable dPressed -> d
    int shift -> e
    int delayInternal -> f
    boolean active -> g
    boolean initialized -> h
    boolean backgroundInternal -> i
    android.view.View additionalWhiteView -> j
    int WHITEPRESS -> k
    int TRANSPARENT -> l
    void setImageResource(int) -> setImageResource
    void setImagePressResource(int) -> setImagePressResource
    void initializePressImageResource(int) -> a
    void setAdditionalPressWhiteView(android.view.View) -> setAdditionalPressWhiteView
    void initializePressImageResourceWhite(int,boolean) -> a
    void initializePressImageResource(int,boolean) -> b
    void initializePressImageResource(int,int,int,boolean) -> a
    void deactivatePressImageResourceWhite() -> a
    void initializePressImageResource(int,int,int,int,boolean) -> a
org.cryptocator.ImagePressButton$1 -> org.cryptocator.fp:
    org.cryptocator.ImagePressButton this$0 -> a
    android.widget.ImageButton val$instance -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    org.cryptocator.ImagePressButton access$0(org.cryptocator.ImagePressButton$1) -> a
org.cryptocator.ImagePressButton$1$1 -> org.cryptocator.fq:
    org.cryptocator.ImagePressButton$1 this$1 -> a
    android.widget.ImageButton val$instance -> b
    void run() -> run
org.cryptocator.ImageSmileyEditText -> org.cryptocator.ImageSmileyEditText:
    java.lang.String description -> e
    java.lang.String titleAddition -> f
    boolean isInputTextField -> g
    org.cryptocator.ImageSmileyEditText$OnCutCopyPasteListener onCutCopyPasteListener -> a
    int[] smileyOrder -> b
    java.lang.String[] smileyLabel -> c
    java.lang.String[] smileyText -> d
    android.text.Spannable$Factory spannableFactory -> h
    int maxWidth -> i
    java.util.regex.Pattern[] refSmileys -> j
    void setConversationItem(org.cryptocator.ConversationItem) -> setConversationItem
    void setOnCutCopyPasteListener(org.cryptocator.ImageSmileyEditText$OnCutCopyPasteListener) -> setOnCutCopyPasteListener
    void updateMaxWidth(int) -> a
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean addImages(android.content.Context,android.text.Spannable,float,org.cryptocator.ImageSmileyEditText,boolean) -> a
    android.text.Spannable getTextWithImages(android.content.Context,java.lang.CharSequence,float,org.cryptocator.ImageSmileyEditText,boolean) -> a
    boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    void setInputTextField(boolean) -> setInputTextField
    java.lang.String access$0(org.cryptocator.ImageSmileyEditText) -> a
    java.lang.String access$1(org.cryptocator.ImageSmileyEditText) -> b
org.cryptocator.ImageSmileyEditText$1 -> org.cryptocator.fr:
    android.content.Context val$context -> a
    android.graphics.Bitmap val$bitmap2 -> b
    java.lang.String val$encodedImg -> c
    org.cryptocator.ImageSmileyEditText val$editText -> d
    int val$imageIndex2 -> e
    void onClick(android.view.View) -> onClick
org.cryptocator.ImageSmileyEditText$OnCutCopyPasteListener -> org.cryptocator.fs:
    void onCut() -> b
    void onCopy() -> c
    void onPaste() -> a
org.cryptocator.KeyEventEditText -> org.cryptocator.KeyEventEditText:
    org.cryptocator.KeyEventEditText$KeyEventEditTextEditTextKeyListener listener -> a
    void setKeyListener(org.cryptocator.KeyEventEditText$KeyEventEditTextEditTextKeyListener) -> setKeyListener
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
org.cryptocator.KeyEventEditText$KeyEventEditTextEditTextKeyListener -> org.cryptocator.ft:
    boolean keyEvent(int,android.view.KeyEvent) -> a
org.cryptocator.LoginData -> org.cryptocator.fu:
    java.lang.String user -> a
    java.lang.String password -> b
    java.lang.String val -> c
org.cryptocator.Main -> org.cryptocator.Main:
    java.util.List uidList -> g
    android.widget.LinearLayout adduseritem -> h
    android.widget.Spinner serverspinner -> i
    android.widget.LinearLayout mainBackground -> j
    android.widget.LinearLayout mainInnerView -> k
    android.widget.TextView addUserText -> l
    org.cryptocator.KeyEventEditText addUserName -> m
    android.widget.Button addUserButton -> n
    android.app.Activity context -> o
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageContextMenuProvider -> p
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider imageAccountMenuProvider -> q
    boolean skipResume -> a
    boolean highContrast -> b
    int highContrastBarrierInPermille -> c
    int TEXTCOLOEWHITE -> d
    int TEXTCOLOEWHITEDIMMED -> e
    int TEXTCOLOEWHITEDIMMED2 -> f
    org.cryptocator.Main instance -> r
    boolean visible -> s
    android.hardware.SensorEventListener lightSensorListener -> t
    void onCreate(android.os.Bundle) -> onCreate
    void setTitle(java.lang.String) -> a
    boolean possiblyPromptUserIfNoAccount(android.content.Context,android.view.View) -> a
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider createAccountMenu(android.content.Context) -> i
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider createContextMenu(android.content.Context) -> j
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void startSettings(android.content.Context) -> a
    void startAccount(android.content.Context,int) -> a
    void doRefresh(android.content.Context) -> b
    void addExternalSMSUser(android.content.Context) -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void possiblyRebuildUserlistAsync(android.content.Context,boolean) -> a
    void rebuildUserlist(android.content.Context,boolean) -> b
    void showHideAddUser(android.content.Context,boolean) -> c
    void addUserLine(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> a
    void saveUIDList(android.content.Context,java.util.List) -> a
    boolean alreadyInList(int,java.util.List) -> a
    java.lang.String getLastMessage(android.content.Context,int) -> b
    long getLastMessageTimestamp(android.content.Context,int) -> c
    void updateLastMessage(android.content.Context,int,java.lang.String,long) -> a
    java.util.List buildSortedFullUidList(android.content.Context,java.util.List,boolean) -> a
    java.util.List loadUIDList(android.content.Context) -> d
    java.util.List appendUIDList(android.content.Context,java.lang.String,java.util.List) -> a
    void deleteUser(android.content.Context,int) -> d
    void deleteUserFromCurrentList(android.content.Context,int) -> e
    void addUser(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    void addUser(android.content.Context,int) -> f
    void internalAddUserAndRefreshUserlist(android.content.Context,int,java.lang.String) -> c
    boolean isUpdateName(android.content.Context,int) -> g
    void setUpdateName(android.content.Context,int,boolean) -> a
    boolean isUpdatePhone(android.content.Context,int) -> h
    void setUpdatePhone(android.content.Context,int,boolean) -> b
    void saveUID2Name(android.content.Context,int,java.lang.String) -> a
    java.lang.String UID2Name(android.content.Context,int,boolean) -> c
    java.lang.String UID2Name(android.content.Context,int,boolean,boolean) -> a
    java.lang.String UID2Name(android.content.Context,int,boolean,boolean,int) -> a
    void updateUID2Name(android.content.Context,int,org.cryptocator.Main$UpdateListener) -> a
    void updateUID2Name(android.content.Context,java.util.List,int) -> a
    void updateUID2Name(android.content.Context,int,java.lang.String,java.util.List,org.cryptocator.Main$UpdateListener,int) -> a
    void updateInfoMessageBlockAsync(android.content.Context) -> e
    void updateInfo(android.content.Context) -> f
    java.lang.String getNameFromAddressBook(android.content.Context,java.lang.String) -> a
    void promptUserClick(android.content.Context,int) -> i
    void composeMessage(android.content.Context,java.lang.String,java.lang.String) -> a
    void editUser(android.content.Context,int) -> j
    void callUser(android.content.Context,int) -> k
    org.cryptocator.Main getInstance() -> a
    boolean isVisible() -> b
    boolean isAlive() -> c
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void onResume() -> onResume
    void exitApplication(android.content.Context) -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void updateLightSensor(android.content.Context) -> h
    android.app.Activity access$0(org.cryptocator.Main) -> a
    void access$1(org.cryptocator.Main,android.content.Context,boolean) -> a
    org.cryptocator.ImageContextMenu$ImageContextMenuProvider access$2(org.cryptocator.Main,android.content.Context) -> a
    android.widget.LinearLayout access$3(org.cryptocator.Main) -> b
    java.util.List access$4() -> d
    org.cryptocator.KeyEventEditText access$5(org.cryptocator.Main) -> c
    android.widget.Spinner access$6(org.cryptocator.Main) -> d
    void access$7(android.content.Context,int,java.lang.String) -> b
org.cryptocator.Main$1 -> org.cryptocator.fv:
    org.cryptocator.Main this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$10 -> org.cryptocator.fw:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$11 -> org.cryptocator.fx:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$12 -> org.cryptocator.fy:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$13 -> org.cryptocator.fz:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$14 -> org.cryptocator.ga:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$15 -> org.cryptocator.gb:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$16 -> org.cryptocator.gc:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$17 -> org.cryptocator.gd:
    android.content.Context val$context -> a
    void run() -> run
org.cryptocator.Main$18 -> org.cryptocator.ge:
    org.cryptocator.Main this$0 -> a
    void selected(int,boolean) -> a
org.cryptocator.Main$19 -> org.cryptocator.gf:
    android.content.Context val$context -> a
    boolean val$resolveNames -> b
    void run() -> run
org.cryptocator.Main$19$1 -> org.cryptocator.gg:
    org.cryptocator.Main$19 this$1 -> a
    android.content.Context val$context -> b
    boolean val$resolveNames -> c
    void run() -> run
org.cryptocator.Main$2 -> org.cryptocator.gh:
    org.cryptocator.Main this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$20 -> org.cryptocator.gi:
    org.cryptocator.Main this$0 -> a
    int val$myUid -> b
    android.content.Context val$context -> c
    int val$serverDefaultId -> d
    boolean val$resolveNames -> e
    void run() -> run
    org.cryptocator.Main access$0(org.cryptocator.Main$20) -> a
org.cryptocator.Main$20$1 -> org.cryptocator.gj:
    org.cryptocator.Main$20 this$1 -> a
    int val$myUid -> b
    android.content.Context val$context -> c
    int val$serverDefaultId -> d
    boolean val$resolveNames -> e
    void onUpdate(java.lang.String) -> a
    org.cryptocator.Main$20 access$0(org.cryptocator.Main$20$1) -> a
org.cryptocator.Main$20$1$1 -> org.cryptocator.gk:
    org.cryptocator.Main$20$1 this$2 -> a
    int val$myUid -> b
    java.lang.String val$data -> c
    android.content.Context val$context -> d
    int val$serverDefaultId -> e
    boolean val$resolveNames -> f
    void run() -> run
org.cryptocator.Main$21 -> org.cryptocator.gl:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    boolean keyEvent(int,android.view.KeyEvent) -> a
org.cryptocator.Main$22 -> org.cryptocator.gm:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$23 -> org.cryptocator.gn:
    org.cryptocator.Main this$0 -> a
    void run() -> run
org.cryptocator.Main$24 -> org.cryptocator.go:
    org.cryptocator.Main this$0 -> a
    void run() -> run
org.cryptocator.Main$25 -> org.cryptocator.gp:
    org.cryptocator.Main this$0 -> a
    void run() -> run
org.cryptocator.Main$26 -> org.cryptocator.gq:
    org.cryptocator.Main this$0 -> a
    android.view.View val$userlistitem -> b
    int val$backid -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.cryptocator.Main$26$1 -> org.cryptocator.gr:
    org.cryptocator.Main$26 this$1 -> a
    android.view.View val$userlistitem -> b
    int val$backid -> c
    void run() -> run
org.cryptocator.Main$27 -> org.cryptocator.gs:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$28 -> org.cryptocator.gt:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.Main$29 -> org.cryptocator.gu:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    int val$suid -> d
    int val$uid -> e
    void response(java.lang.String) -> a
org.cryptocator.Main$3 -> org.cryptocator.gv:
    org.cryptocator.Main this$0 -> a
    android.widget.LinearLayout val$titletextparent -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.cryptocator.Main$3$1 -> org.cryptocator.gw:
    org.cryptocator.Main$3 this$1 -> a
    android.widget.LinearLayout val$titletextparent -> b
    void run() -> run
org.cryptocator.Main$30 -> org.cryptocator.gx:
    java.util.List val$uidList -> a
    int val$uidSingleLookup -> b
    android.content.Context val$context -> c
    int val$serverId -> d
    org.cryptocator.Main$UpdateListener val$updateListener -> e
    void response(java.lang.String) -> a
org.cryptocator.Main$31 -> org.cryptocator.gy:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
org.cryptocator.Main$32 -> org.cryptocator.gz:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$33 -> org.cryptocator.ha:
    void selected(int,boolean) -> a
org.cryptocator.Main$34 -> org.cryptocator.hb:
    android.content.Context val$context -> a
    int val$uid -> b
    boolean val$havePhone -> c
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
org.cryptocator.Main$34$1 -> org.cryptocator.hc:
    org.cryptocator.Main$34 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    org.cryptocator.MessageAlertDialog val$dialog -> d
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$34$2 -> org.cryptocator.hd:
    org.cryptocator.Main$34 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    org.cryptocator.MessageAlertDialog val$dialog -> d
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$34$3 -> org.cryptocator.he:
    org.cryptocator.Main$34 this$1 -> a
    android.content.Context val$context -> b
    int val$uid -> c
    org.cryptocator.MessageAlertDialog val$dialog -> d
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$35 -> org.cryptocator.hf:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
org.cryptocator.Main$36 -> org.cryptocator.hg:
    android.content.Context val$context -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
org.cryptocator.Main$4 -> org.cryptocator.hh:
    org.cryptocator.Main this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$5 -> org.cryptocator.hi:
    org.cryptocator.Main this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$6 -> org.cryptocator.hj:
    org.cryptocator.Main this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$7 -> org.cryptocator.hk:
    org.cryptocator.Main this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Main$8 -> org.cryptocator.hl:
    android.content.Context val$context -> a
    void run() -> run
org.cryptocator.Main$8$1 -> org.cryptocator.hm:
    org.cryptocator.Main$8 this$1 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Main$9 -> org.cryptocator.hn:
    org.cryptocator.Main this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    boolean onSelection(org.cryptocator.ImageContextMenu) -> a
org.cryptocator.Main$UpdateListener -> org.cryptocator.ho:
    void onUpdate(java.lang.String) -> a
org.cryptocator.MessageAlertDialog -> org.cryptocator.hp:
    int BUTTONOK0 -> a
    int BUTTONOK1 -> b
    int BUTTONCANCEL -> c
    java.lang.String titleMessage -> d
    java.lang.String textMessage -> e
    java.lang.String trueButton -> f
    java.lang.String neutralButton -> g
    java.lang.String falseButton -> h
    boolean handled -> i
    boolean cancel -> j
    android.content.Context context -> k
    org.cryptocator.MessageAlertDialog$OnSelectionListener selectionListener -> l
    org.cryptocator.MessageAlertDialog$OnInnerViewProvider innerViewProvider -> m
    android.view.View innerView -> n
    void onCreate(android.os.Bundle) -> onCreate
org.cryptocator.MessageAlertDialog$1 -> org.cryptocator.hq:
    org.cryptocator.MessageAlertDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageAlertDialog$2 -> org.cryptocator.hr:
    org.cryptocator.MessageAlertDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageAlertDialog$3 -> org.cryptocator.hs:
    org.cryptocator.MessageAlertDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageAlertDialog$4 -> org.cryptocator.ht:
    org.cryptocator.MessageAlertDialog this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
org.cryptocator.MessageAlertDialog$OnInnerViewProvider -> org.cryptocator.hu:
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
org.cryptocator.MessageAlertDialog$OnSelectionListener -> org.cryptocator.hv:
    void selected(int,boolean) -> a
org.cryptocator.MessageDetailsActivity -> org.cryptocator.MessageDetailsActivity:
    org.cryptocator.ConversationItem conversationItem -> a
    int hostUid -> b
    android.app.Activity activity -> c
    android.content.Context context -> d
    android.app.AlertDialog alertDialog -> e
    boolean cancel -> f
    boolean handled -> g
    android.widget.CheckBox details -> h
    android.widget.CheckBox removeImages -> i
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getSessionKeyTransportDisplayInfo(android.content.Context,int) -> a
    int getImageAttachmentNumber(android.content.Context,java.lang.String) -> a
    int autoSaveAllImages(android.content.Context,java.lang.String,org.cryptocator.ConversationItem) -> a
    java.lang.String extractImageAttachment(android.content.Context,java.lang.String,int) -> a
    android.widget.CheckBox access$0(org.cryptocator.MessageDetailsActivity) -> a
    android.widget.CheckBox access$1(org.cryptocator.MessageDetailsActivity) -> b
    void access$2(org.cryptocator.MessageDetailsActivity,android.widget.CheckBox) -> a
    void access$3(org.cryptocator.MessageDetailsActivity,android.widget.CheckBox) -> b
org.cryptocator.MessageDetailsActivity$1 -> org.cryptocator.hw:
    org.cryptocator.MessageDetailsActivity this$0 -> a
    android.widget.Spinner val$attachmentspinner -> b
    org.cryptocator.ConversationItem val$updatedItem -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageDetailsActivity$2 -> org.cryptocator.hx:
    org.cryptocator.MessageDetailsActivity this$0 -> a
    android.widget.Spinner val$attachmentspinner -> b
    org.cryptocator.ConversationItem val$updatedItem -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageDetailsActivity$3 -> org.cryptocator.hy:
    org.cryptocator.MessageDetailsActivity this$0 -> a
    int val$hostUid -> b
    org.cryptocator.ConversationItem val$updatedItem -> c
    void onClick(android.view.View) -> onClick
    org.cryptocator.MessageDetailsActivity access$0(org.cryptocator.MessageDetailsActivity$3) -> a
org.cryptocator.MessageDetailsActivity$3$1 -> org.cryptocator.hz:
    org.cryptocator.MessageDetailsActivity$3 this$1 -> a
    org.cryptocator.ConversationItem val$updatedItem -> b
    java.util.List val$conversationList -> c
    void selected(int,boolean) -> a
org.cryptocator.MessageDetailsActivity$3$2 -> org.cryptocator.ia:
    org.cryptocator.MessageDetailsActivity$3 this$1 -> a
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
org.cryptocator.MessageDetailsActivity$4 -> org.cryptocator.ib:
    org.cryptocator.MessageDetailsActivity this$0 -> a
    int val$hostUid -> b
    org.cryptocator.ConversationItem val$updatedItem -> c
    void onClick(android.view.View) -> onClick
    org.cryptocator.MessageDetailsActivity access$0(org.cryptocator.MessageDetailsActivity$4) -> a
org.cryptocator.MessageDetailsActivity$4$1 -> org.cryptocator.ic:
    org.cryptocator.MessageDetailsActivity$4 this$1 -> a
    int val$hostUid -> b
    org.cryptocator.ConversationItem val$updatedItem -> c
    void selected(int,boolean) -> a
org.cryptocator.MessageDetailsActivity$5 -> org.cryptocator.id:
    org.cryptocator.MessageDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageDetailsActivity$6 -> org.cryptocator.ie:
    org.cryptocator.MessageDetailsActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.cryptocator.MessageInputDialog -> org.cryptocator.if:
    int BUTTONOK0 -> a
    int BUTTONOK1 -> b
    int BUTTONCANCEL -> c
    java.lang.String titleMessage -> d
    java.lang.String textMessage -> e
    java.lang.String trueButton -> f
    java.lang.String neutralButton -> g
    java.lang.String falseButton -> h
    java.lang.String returnText -> i
    android.widget.EditText inputText -> j
    int inputType -> k
    boolean handled -> l
    boolean cancel -> m
    android.content.Context context -> n
    org.cryptocator.MessageInputDialog$OnSelectionListener selectionListener -> o
    boolean showKeyboardOnShow -> p
    boolean selectOnShow -> q
    void setText(java.lang.String,boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
org.cryptocator.MessageInputDialog$1 -> org.cryptocator.ig:
    org.cryptocator.MessageInputDialog this$0 -> a
    void run() -> run
org.cryptocator.MessageInputDialog$2 -> org.cryptocator.ih:
    org.cryptocator.MessageInputDialog this$0 -> a
    org.cryptocator.MessageInputDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageInputDialog$3 -> org.cryptocator.ii:
    org.cryptocator.MessageInputDialog this$0 -> a
    org.cryptocator.MessageInputDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageInputDialog$4 -> org.cryptocator.ij:
    org.cryptocator.MessageInputDialog this$0 -> a
    org.cryptocator.MessageInputDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.MessageInputDialog$5 -> org.cryptocator.ik:
    org.cryptocator.MessageInputDialog this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
org.cryptocator.MessageInputDialog$6 -> org.cryptocator.il:
    org.cryptocator.MessageInputDialog this$0 -> a
    void run() -> run
org.cryptocator.MessageInputDialog$7 -> org.cryptocator.im:
    org.cryptocator.MessageInputDialog this$0 -> a
    void run() -> run
org.cryptocator.MessageInputDialog$8 -> org.cryptocator.in:
    org.cryptocator.MessageInputDialog this$0 -> a
    void run() -> run
org.cryptocator.MessageInputDialog$OnSelectionListener -> org.cryptocator.io:
    void selected(org.cryptocator.MessageInputDialog,int,boolean,java.lang.String) -> a
org.cryptocator.MmsReceiver -> org.cryptocator.MmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.cryptocator.PictureImportActivity -> org.cryptocator.PictureImportActivity:
    int hostUid -> a
    android.app.Activity activity -> b
    android.content.Context context -> c
    android.app.AlertDialog pictureImportDialog -> d
    android.widget.LinearLayout sizetextback -> h
    boolean cancel -> e
    boolean handled -> f
    android.graphics.Bitmap attachmentBitmap -> g
    android.widget.RatingBar quality -> i
    android.widget.TextView qualitytext -> j
    android.widget.TextView sizetext -> k
    android.widget.ImageView size0 -> l
    android.widget.LinearLayout size0highlight -> m
    android.widget.ImageView size1 -> n
    android.widget.LinearLayout size1highlight -> o
    android.widget.ImageView size2 -> p
    android.widget.ImageView size3 -> q
    android.widget.LinearLayout size2highlight -> r
    android.widget.LinearLayout size3highlight -> s
    int selectedSize -> t
    int selectedQuality -> u
    int HIGHLIGHTBACK -> v
    int BACKTRANSPARENTCOLOR -> w
    int QUALITYDEFAULT -> x
    int SIZEDEFAULT -> y
    int SIZE0 -> z
    int SIZE1 -> A
    int SIZE2 -> B
    int SIZE3 -> C
    java.lang.String result -> D
    org.cryptocator.PictureImportActivity$OnPictureImportListener onPictureImportListener -> E
    int BACKALERTOKCOLOR -> F
    int BACKALERTWARN1COLOR -> G
    int BACKALERTWARN2COLOR -> H
    void setOnPictureImportListener(org.cryptocator.PictureImportActivity$OnPictureImportListener) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void updateImages(android.content.Context) -> a
    android.graphics.drawable.Drawable getResizedImageAsDrawable(android.content.Context,android.graphics.Bitmap,int,int,int) -> a
    java.lang.String getResizedImageAsBASE64String(android.content.Context,android.graphics.Bitmap,int,int,int) -> b
    void updateTemporaryResult() -> i
    void updateQuality(float) -> a
    void access$0(org.cryptocator.PictureImportActivity,float) -> a
    android.widget.LinearLayout access$1(org.cryptocator.PictureImportActivity) -> a
    int access$2() -> a
    android.widget.LinearLayout access$3(org.cryptocator.PictureImportActivity) -> b
    int access$4() -> b
    android.widget.LinearLayout access$5(org.cryptocator.PictureImportActivity) -> c
    android.widget.LinearLayout access$6(org.cryptocator.PictureImportActivity) -> d
    int access$7() -> c
    void access$8(org.cryptocator.PictureImportActivity,int) -> a
    void access$9(org.cryptocator.PictureImportActivity) -> e
    int access$10() -> d
    int access$11() -> e
    int access$12() -> f
    org.cryptocator.PictureImportActivity$OnPictureImportListener access$13() -> g
    java.lang.String access$14() -> h
org.cryptocator.PictureImportActivity$1 -> org.cryptocator.ip:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
org.cryptocator.PictureImportActivity$2 -> org.cryptocator.iq:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.PictureImportActivity$3 -> org.cryptocator.ir:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.PictureImportActivity$4 -> org.cryptocator.is:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.PictureImportActivity$5 -> org.cryptocator.it:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.PictureImportActivity$6 -> org.cryptocator.iu:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.PictureImportActivity$7 -> org.cryptocator.iv:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.PictureImportActivity$8 -> org.cryptocator.iw:
    org.cryptocator.PictureImportActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.cryptocator.PictureImportActivity$OnPictureImportListener -> org.cryptocator.ix:
    void onImport(java.lang.String) -> a
org.cryptocator.ReceiveSMS -> org.cryptocator.ReceiveSMS:
    android.telephony.SmsManager sms -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    int getUidByPhoneOrCreateUser(android.content.Context,java.lang.String,boolean) -> a
    boolean handleMessage(android.content.Context,java.lang.String,java.lang.String) -> a
org.cryptocator.Scheduler -> org.cryptocator.Scheduler:
    android.app.PendingIntent pendingIntent -> a
    org.cryptocator.Scheduler$OnUpdateListener listener -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void updatePendingIntent(android.content.Context) -> a
    void reschedule(android.content.Context,boolean,boolean,boolean) -> a
    void update(android.content.Context,boolean) -> a
org.cryptocator.Scheduler$1 -> org.cryptocator.iy:
    android.content.Context val$context -> a
    int val$serverId -> b
    boolean val$onlyReceive -> c
    void run() -> run
org.cryptocator.Scheduler$OnUpdateListener -> org.cryptocator.iz:
    void update() -> a
org.cryptocator.ScrollViewEx -> org.cryptocator.ScrollViewEx:
    int lockedPos -> a
    long lastOverscroll -> b
    int overscrollCnt -> c
    int OVERSCROLLMIN -> e
    int LASTOVERSCROLLMINDIFF -> f
    org.cryptocator.ScrollViewEx$ScrollViewExListener scrollViewExListener -> g
    org.cryptocator.ScrollViewEx$WatchDogThread watchDogThread -> d
    int RESTTIMETRIGGER -> h
    void setScrollViewListener(org.cryptocator.ScrollViewEx$ScrollViewExListener) -> setScrollViewListener
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void startWatchDogThread(android.content.Context,int,org.cryptocator.ScrollViewEx$ScrollViewExListener,org.cryptocator.ScrollViewEx) -> a
org.cryptocator.ScrollViewEx$ScrollViewExListener -> org.cryptocator.ja:
    void onScrollChanged(org.cryptocator.ScrollViewEx,int,int,int,int) -> a
    void onScrollRested(org.cryptocator.ScrollViewEx,int,int,int,int) -> b
    void onOversroll(boolean) -> a
org.cryptocator.ScrollViewEx$WatchDogThread -> org.cryptocator.jb:
    android.content.Context context -> a
    boolean cancel -> b
    long startOrResetTimeStamp -> c
    boolean enabled -> d
    int milliseconds -> e
    org.cryptocator.ScrollViewEx$ScrollViewExListener listener -> f
    org.cryptocator.ScrollViewEx scrollView -> g
    int xLastRest -> h
    int yLastRest -> i
    int xCurrent -> j
    int yCurrent -> k
    org.cryptocator.ScrollViewEx this$0 -> l
    void reset() -> a
    void cancel() -> b
    void run() -> run
org.cryptocator.SendSMS -> org.cryptocator.jc:
    boolean inService -> a
    boolean hasSignal -> b
    boolean hasSignalNew -> c
    int signal -> d
    android.telephony.PhoneStateListener phoneStateListener -> e
    void ensurePhoneStateListener(android.content.Context) -> b
    void startSendingTimestamp(android.content.Context,int,int,org.cryptocator.SendSMS$SMSSendThread) -> a
    void smsSent(android.content.Context,int) -> a
    boolean isSmsSending(android.content.Context) -> a
    void sendSMS(android.content.Context,java.lang.String,java.lang.String,int,int,int,int,int,boolean) -> a
    boolean hasSignal() -> b
    boolean access$0() -> a
    void access$1(android.telephony.PhoneStateListener) -> a
org.cryptocator.SendSMS$1 -> org.cryptocator.jd:
    void run() -> run
org.cryptocator.SendSMS$1$1 -> org.cryptocator.je:
    org.cryptocator.SendSMS$1 this$1 -> a
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
org.cryptocator.SendSMS$SMSSendThread -> org.cryptocator.jf:
    android.content.Context context -> a
    java.lang.String number -> b
    int localId -> c
    int hostUid -> d
    int sendingId -> e
    int part -> f
    int parts -> g
    java.lang.String text -> h
    boolean registeredReceipient -> i
    void run() -> run
org.cryptocator.SendSMSDelivered -> org.cryptocator.SendSMSDelivered:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.cryptocator.SendSMSSent -> org.cryptocator.SendSMSSent:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void SMSFailed(android.content.Context,int,int,int,java.lang.String) -> a
    void SMSFailedSimple(android.content.Context,int,java.lang.String) -> a
org.cryptocator.Setup -> org.cryptocator.Setup:
    int VERSION_SINGLESERVER -> a
    int VERSION_MULTISERVER -> b
    int VERSION_MULTISERVERREVOKE -> c
    int VERSION_CURRENT -> d
    java.lang.String DEFAULT_SERVER -> e
    java.lang.String DATABASEPREFIX -> f
    java.lang.String DATABASEPOSTFIX -> g
    java.lang.String DATABASESENDING -> h
    java.lang.String DATABASESENT -> i
    java.lang.String INTENTEXTRA -> j
    java.lang.String ALERT_PREFIX -> k
    java.lang.String APPLICATION_PACKAGE_NAME -> l
    java.lang.String GROUP_CRYPTOCATOR -> m
    int accountLocked -> u
    int advanedSetupCountdown -> v
    java.util.HashMap BASESERVERADDRESSCACHED -> w
    int SMS_DEFAULT_SIZE -> n
    int SMS_DEFAULT_SIZE_MULTIPART -> o
    int SMS_DEFAULT_SIZE_ENCRYPTED -> p
    int COLOR_MAIN_BLUE -> q
    int COLOR_MAIN_BLUEDARK -> r
    int COLOR_MAIN_BLUEDARKEST -> s
    int COLOR_BLUELINE -> t
    boolean restartRequiredFlag -> x
    android.widget.CheckBox active -> y
    android.widget.CheckBox encryption -> z
    android.widget.CheckBox notification -> A
    android.widget.CheckBox tone -> B
    android.widget.CheckBox vibrate -> C
    android.widget.CheckBox ignore -> D
    android.widget.CheckBox autosave -> E
    android.widget.CheckBox noread -> F
    android.widget.CheckBox chatmode -> G
    android.widget.CheckBox quicktype -> H
    android.widget.CheckBox smileys -> I
    android.widget.CheckBox noscreenshots -> J
    android.widget.CheckBox powersave -> K
    android.widget.CheckBox receiveallsms -> L
    android.widget.ImageView helpactive -> M
    android.widget.ImageView helpencryption -> N
    android.widget.ImageView helptone -> O
    android.widget.ImageView helpvibrate -> P
    android.widget.ImageView helpnotification -> Q
    android.widget.ImageView helpignore -> R
    android.widget.ImageView helpautosave -> S
    android.widget.ImageView helpnoread -> T
    android.widget.ImageView helpquicktype -> U
    android.widget.ImageView helpsmileys -> V
    android.widget.ImageView helpchatmode -> W
    android.widget.ImageView helpnoscreenshots -> X
    android.widget.ImageView helppowersave -> Y
    android.widget.ImageView helpreceiveallsms -> Z
    android.widget.EditText uid -> aa
    android.widget.EditText email -> ab
    android.widget.EditText pwd -> ac
    android.widget.EditText usernew -> ad
    android.widget.EditText emailnew -> ae
    android.widget.EditText pwdnew -> af
    android.widget.EditText user -> ag
    android.widget.EditText pwdchange -> ah
    android.widget.TextView error -> ai
    android.widget.TextView info -> aj
    android.widget.TextView deviceid -> ak
    android.widget.LinearLayout advancedsettings -> al
    android.widget.Button buttonclearsending -> am
    android.widget.Button buttondebugprint -> an
    android.widget.Button buttondeletedatabase -> ao
    android.widget.Button create -> ap
    android.widget.Button login -> aq
    android.widget.Button updatepwd -> ar
    android.widget.Button updateuser -> as
    android.widget.EditText phone -> at
    android.widget.Button enablesmsoption -> au
    android.widget.Button disablesmsoption -> av
    android.widget.Button backup -> aw
    android.widget.Button restore -> ax
    android.widget.LinearLayout accountnew -> ay
    android.widget.LinearLayout accountexisting -> az
    android.widget.LinearLayout accountonline -> aA
    android.widget.LinearLayout accountsection -> aB
    android.widget.LinearLayout accountheader -> aC
    android.widget.LinearLayout settingssection -> aD
    boolean online -> aE
    android.widget.CheckBox newaccount -> aF
    boolean accountType -> aG
    android.widget.ImageView serverimage -> aH
    android.widget.CheckBox serverdisabled -> aI
    android.widget.ImageButton serverbuttonmodify -> aJ
    android.widget.Button serverbuttonadd -> aK
    android.widget.Button serverbuttondelete -> aL
    android.widget.Spinner serverspinner -> aM
    int selectedServerId -> aN
    int FAKEUIDLEN -> aO
    java.util.HashMap cachedServerIdsFromServerAddress -> aP
    java.util.List cachedServerIds -> aQ
    java.util.List cachedServers -> aR
    java.util.HashMap cachedServerActive -> aS
    java.util.HashMap cachedServerAccount -> aT
    java.util.HashMap cachedSUid -> aU
    java.util.HashMap cachedServerId -> aV
    java.util.HashMap cachedServerLabel -> aW
    void onCreate(android.os.Bundle) -> onCreate
    void hideServerModifyButtons() -> a
    void buildServerTabs(android.content.Context) -> x
    void updateServerSpinner(android.content.Context,android.widget.Spinner) -> a
    void loadSettings(android.content.Context) -> y
    void loadServerTab(android.content.Context,int) -> Q
    void updateServerImage(android.content.Context,boolean,boolean) -> a
    java.lang.String ensureServerURLWithRequestEnding(java.lang.String) -> i
    java.lang.String getBaseURL(android.content.Context,int) -> a
    void setTitle(java.lang.String) -> a
    void updateAccountLocked(android.content.Context,boolean,int) -> e
    void updateTitleIDInfo(android.content.Context) -> a
    void promptAddServer(android.content.Context) -> z
    void testServerPingBeforeAdd(android.content.Context,java.lang.String) -> d
    void promptDeleteServer(android.content.Context) -> A
    void promptModifyServer(android.content.Context) -> b
    void updatePhoneNumberAndButtonStates(android.content.Context,int) -> R
    boolean isSMSModeOn(android.content.Context,int) -> b
    void setErrorInfo(java.lang.String) -> b
    void setErrorInfo(java.lang.String,boolean) -> a
    void setErrorInfo(android.content.Context,java.lang.String) -> a
    void setErrorInfo(android.content.Context,java.lang.String,boolean) -> a
    void updateonline() -> b
    void validate(android.content.Context,int) -> c
    void updateUsername(android.content.Context,int) -> d
    void updatePwd(android.content.Context,int) -> e
    void createNewAccount(android.content.Context,int) -> f
    void updateCurrentMid(android.content.Context,int) -> g
    void backup(android.content.Context,boolean,boolean,int) -> a
    void restore(android.content.Context,boolean,int) -> a
    void updateSMSOption(android.content.Context,boolean,int) -> b
    void setActive(android.content.Context,boolean) -> a
    boolean isActive(android.content.Context) -> c
    int getErrorUpdateInterval(android.content.Context) -> d
    void setErrorUpdateInterval(android.content.Context,boolean) -> b
    boolean isUserActive() -> c
    void enableEncryption(android.content.Context) -> e
    boolean sendCurrentKeyToServer(android.content.Context,int) -> h
    void disableEncryption(android.content.Context) -> f
    boolean isAESKeyOutdated(android.content.Context,int,boolean,int) -> a
    long getAESKeyDate(android.content.Context,int,int) -> a
    void setAESKeyDate(android.content.Context,int,java.lang.String,int) -> a
    void saveAESKey(android.content.Context,int,java.lang.String) -> a
    java.lang.String serializeAESKey(java.security.Key) -> a
    java.security.Key generateAESKey(java.lang.String) -> c
    java.lang.String getAESKeyBackupAsString(android.content.Context,int) -> i
    java.security.Key getAESKeyBackup(android.content.Context,int) -> j
    java.lang.String getAESKeyAsString(android.content.Context,int) -> k
    java.lang.String getAESKeyHash(android.content.Context,int) -> l
    java.security.Key getAESKey(android.content.Context,int) -> m
    java.lang.String getKeyDate(android.content.Context,int) -> n
    void setKeyDate(android.content.Context,int,java.lang.String) -> b
    void saveKey(android.content.Context,int,java.lang.String,boolean) -> a
    boolean haveKey(android.content.Context,int) -> o
    java.lang.String getKeyAsString(android.content.Context,int) -> p
    java.lang.String getKeyHash(android.content.Context,int) -> q
    java.security.PublicKey getKey(android.content.Context,java.lang.String) -> b
    java.security.PublicKey getKey(android.content.Context,int) -> r
    java.lang.String getPublicKeyAsString(android.content.Context) -> g
    java.lang.String getPublicKeyHash(android.content.Context) -> h
    java.security.PrivateKey getPrivateKey(android.content.Context) -> i
    boolean encryptedSentPossible(android.content.Context,int) -> s
    boolean isEncryptionEnabled(android.content.Context) -> j
    boolean isEncryptionAvailable(android.content.Context,int) -> t
    void savePhoneIsModified(android.content.Context,int,boolean) -> a
    boolean isPhoneModified(android.content.Context,int) -> u
    void savePhone(android.content.Context,int,java.lang.String,boolean) -> b
    java.lang.String getPhone(android.content.Context,int) -> v
    boolean havePhone(android.content.Context,int) -> w
    int getUIDByPhone(android.content.Context,java.lang.String,boolean) -> b
    boolean isSMSOptionEnabled(android.content.Context,int) -> x
    void askMergeUser(android.content.Context,int,int) -> d
    void askOnDisableEncryption(android.content.Context) -> B
    void askOnRefuseReadConfirmation(android.content.Context) -> C
    boolean noAccountYet(android.content.Context) -> k
    java.lang.String normalizePhone(java.lang.String) -> d
    int getFakeUIDFromPhone(java.lang.String) -> e
    void promptDisableReceiveAllSms(android.content.Context) -> D
    boolean isSMSDefaultApp(android.content.Context,boolean) -> c
    void setSMSDefaultApp(android.content.Context,boolean) -> d
    java.lang.String getSessionSecret(android.content.Context,int) -> y
    java.lang.String getSessionID(android.content.Context,int) -> z
    void invalidateTmpLogin(android.content.Context,int) -> A
    boolean ensureLoggedIn(android.content.Context,int) -> B
    java.lang.String getTmpLoginEncoded(android.content.Context,int) -> C
    java.lang.String getTmpLogin(android.content.Context,int) -> D
    org.cryptocator.LoginData calculateLoginVal(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void updateSuccessfullLogin(android.content.Context,java.lang.String,java.lang.String,int) -> a
    void login(android.content.Context,int) -> E
    java.lang.String getServerkeyAsString(android.content.Context,int) -> F
    java.security.PublicKey getServerkey(android.content.Context,int) -> G
    java.lang.String getServer(android.content.Context,int) -> H
    void updateAllServerkeys(android.content.Context) -> l
    void updateServerkey(android.content.Context,int,boolean) -> b
    byte[] prepareKey(android.content.Context,int) -> S
    java.lang.String decText(android.content.Context,java.lang.String,int) -> a
    byte[] prepareSimpleKey(android.content.Context,int) -> T
    java.lang.String encUid(android.content.Context,int,int) -> b
    int decUid(android.content.Context,java.lang.String,int) -> b
    void possiblyInvalidateSession(android.content.Context,boolean,int) -> c
    java.lang.String getDeviceId(android.content.Context) -> m
    void goBack(android.content.Context) -> n
    void possiblyDisableScreenshot(android.app.Activity) -> a
    void possiblyPromptNoEncryption(android.content.Context) -> o
    void saveHaveAskedForEncryption(android.content.Context,boolean) -> e
    boolean isUIDDefined(android.content.Context,int) -> I
    boolean isUIDDefined(android.content.Context) -> p
    void updateAttachmentAllServerLimits(android.content.Context,boolean) -> f
    void updateAttachmentServerLimit(android.content.Context,boolean,int) -> d
    int getAttachmentServerLimit(android.content.Context,int) -> J
    boolean isAttachmentsAllowedByServer(android.content.Context,int) -> K
    boolean extraCountDownToZero(android.content.Context) -> q
    void extraCrountDownSet(android.content.Context,int) -> L
    java.lang.String normalizeServer(java.lang.String) -> f
    int getServerId(java.lang.String) -> g
    boolean removeServer(android.content.Context,int) -> M
    void addServer(android.content.Context,java.lang.String) -> c
    java.util.List getServerIds(android.content.Context) -> r
    java.util.List getServers(android.content.Context) -> s
    java.lang.String getNextReceivingServer(android.content.Context) -> t
    org.cryptocator.ConversationItem getNextSendingServerMessage(android.content.Context) -> u
    void setServerActive(android.content.Context,int,boolean) -> c
    boolean isServerActive(android.content.Context,int,boolean) -> d
    boolean isServerAccount(android.content.Context,int,boolean) -> e
    int getUid(android.content.Context,int,int) -> c
    int getSUid(android.content.Context,int) -> N
    int getServerId(android.content.Context,int) -> O
    int getServerDefaultId(android.content.Context) -> v
    int getVersion(android.content.Context) -> w
    void setVersionUpdated(android.content.Context,int,boolean,java.lang.String) -> a
    java.lang.String getServerLabel(android.content.Context,int,boolean) -> f
    void enableServer(android.content.Context,boolean) -> g
    void onStop() -> onStop
    void access$0(org.cryptocator.Setup,android.content.Context) -> a
    void access$1(org.cryptocator.Setup,android.content.Context) -> b
    int access$2(org.cryptocator.Setup) -> a
    void access$3(org.cryptocator.Setup,android.content.Context,boolean,boolean) -> a
    android.widget.CheckBox access$4(org.cryptocator.Setup) -> b
    void access$5(org.cryptocator.Setup,int) -> a
    android.widget.Spinner access$6(org.cryptocator.Setup) -> c
    void access$7(boolean) -> a
    void access$8(org.cryptocator.Setup,android.content.Context,int) -> a
    int access$9(org.cryptocator.Setup) -> d
    void access$10(org.cryptocator.Setup,int) -> b
    android.widget.LinearLayout access$11() -> d
    android.widget.CheckBox access$12(org.cryptocator.Setup) -> e
    android.widget.CheckBox access$13(org.cryptocator.Setup) -> f
    android.widget.CheckBox access$14(org.cryptocator.Setup) -> g
    android.widget.CheckBox access$15(org.cryptocator.Setup) -> h
    android.widget.CheckBox access$16(org.cryptocator.Setup) -> i
    android.widget.CheckBox access$17(org.cryptocator.Setup) -> j
    android.widget.CheckBox access$18(org.cryptocator.Setup) -> k
    void access$19(org.cryptocator.Setup,android.content.Context) -> c
    android.widget.CheckBox access$20(org.cryptocator.Setup) -> l
    android.widget.CheckBox access$21(org.cryptocator.Setup) -> m
    android.widget.CheckBox access$22(org.cryptocator.Setup) -> n
    android.widget.CheckBox access$23(org.cryptocator.Setup) -> o
    android.widget.CheckBox access$24(org.cryptocator.Setup) -> p
    android.widget.CheckBox access$25(org.cryptocator.Setup) -> q
    void access$26(org.cryptocator.Setup,android.content.Context) -> d
    android.widget.CheckBox access$27(org.cryptocator.Setup) -> r
    void access$28(org.cryptocator.Setup,android.content.Context) -> e
    void access$29(org.cryptocator.Setup,android.content.Context,boolean,int) -> a
    android.widget.CheckBox access$30(org.cryptocator.Setup) -> s
    android.widget.LinearLayout access$31(org.cryptocator.Setup) -> t
    android.widget.LinearLayout access$32(org.cryptocator.Setup) -> u
    void access$33(org.cryptocator.Setup,android.content.Context,java.lang.String) -> a
    java.lang.String access$34(java.lang.String) -> h
    android.widget.ImageButton access$35(org.cryptocator.Setup) -> v
    android.widget.Button access$36(org.cryptocator.Setup) -> w
    android.widget.Button access$37(org.cryptocator.Setup) -> x
    void access$38(org.cryptocator.Setup,boolean) -> a
    android.widget.EditText access$39(org.cryptocator.Setup) -> y
    android.widget.Button access$40(org.cryptocator.Setup) -> z
    android.widget.EditText access$41() -> e
    android.widget.EditText access$42(org.cryptocator.Setup) -> A
    android.widget.EditText access$43(org.cryptocator.Setup) -> B
    android.widget.Button access$44(org.cryptocator.Setup) -> C
    android.widget.Button access$45(org.cryptocator.Setup) -> D
    android.widget.EditText access$46(org.cryptocator.Setup) -> E
    java.util.HashMap access$47() -> f
    android.widget.Button access$48(org.cryptocator.Setup) -> F
    android.widget.EditText access$49(org.cryptocator.Setup) -> G
    android.widget.EditText access$50(org.cryptocator.Setup) -> H
    android.widget.EditText access$51(org.cryptocator.Setup) -> I
    android.widget.Button access$52() -> g
    android.widget.Button access$53(org.cryptocator.Setup) -> J
    android.widget.Button access$54() -> h
    void access$55(android.content.Context,int) -> P
org.cryptocator.Setup$1 -> org.cryptocator.jg:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$10 -> org.cryptocator.jh:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$11 -> org.cryptocator.ji:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$12 -> org.cryptocator.jj:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$12$1 -> org.cryptocator.jk:
    org.cryptocator.Setup$12 this$1 -> a
    android.app.Activity val$context -> b
    void selected(org.cryptocator.MessageInputDialog,int,boolean,java.lang.String) -> a
org.cryptocator.Setup$13 -> org.cryptocator.jl:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$13$1 -> org.cryptocator.jm:
    org.cryptocator.Setup$13 this$1 -> a
    void run() -> run
org.cryptocator.Setup$14 -> org.cryptocator.jn:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$15 -> org.cryptocator.jo:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$16 -> org.cryptocator.jp:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$17 -> org.cryptocator.jq:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$18 -> org.cryptocator.jr:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$19 -> org.cryptocator.js:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$2 -> org.cryptocator.jt:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$20 -> org.cryptocator.ju:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$21 -> org.cryptocator.jv:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$22 -> org.cryptocator.jw:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$23 -> org.cryptocator.jx:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$24 -> org.cryptocator.jy:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$25 -> org.cryptocator.jz:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$26 -> org.cryptocator.ka:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$27 -> org.cryptocator.kb:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$28 -> org.cryptocator.kc:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$29 -> org.cryptocator.kd:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$3 -> org.cryptocator.ke:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$30 -> org.cryptocator.kf:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$31 -> org.cryptocator.kg:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$32 -> org.cryptocator.kh:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$33 -> org.cryptocator.ki:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$34 -> org.cryptocator.kj:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$35 -> org.cryptocator.kk:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$36 -> org.cryptocator.kl:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$37 -> org.cryptocator.km:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$38 -> org.cryptocator.kn:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$39 -> org.cryptocator.ko:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$4 -> org.cryptocator.kp:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.Setup$40 -> org.cryptocator.kq:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$41 -> org.cryptocator.kr:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$42 -> org.cryptocator.ks:
    org.cryptocator.Setup this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$43 -> org.cryptocator.kt:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$44 -> org.cryptocator.ku:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$45 -> org.cryptocator.kv:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$46 -> org.cryptocator.kw:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$47 -> org.cryptocator.kx:
    org.cryptocator.Setup this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.cryptocator.Setup$48 -> org.cryptocator.ky:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$49 -> org.cryptocator.kz:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$5 -> org.cryptocator.la:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$50 -> org.cryptocator.lb:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$51 -> org.cryptocator.lc:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$52 -> org.cryptocator.ld:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$53 -> org.cryptocator.le:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$54 -> org.cryptocator.lf:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$55 -> org.cryptocator.lg:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$56 -> org.cryptocator.lh:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void selected(org.cryptocator.MessageInputDialog,int,boolean,java.lang.String) -> a
org.cryptocator.Setup$57 -> org.cryptocator.li:
    org.cryptocator.Setup this$0 -> a
    java.lang.String val$randomPingToPong -> b
    java.lang.String val$serverUrlToAdd -> c
    android.content.Context val$context -> d
    java.lang.String val$url2 -> e
    void response(java.lang.String) -> a
    org.cryptocator.Setup access$0(org.cryptocator.Setup$57) -> a
org.cryptocator.Setup$57$1 -> org.cryptocator.lj:
    org.cryptocator.Setup$57 this$1 -> a
    java.lang.String val$randomPingToPong -> b
    android.content.Context val$context -> c
    java.lang.String val$serverUrlToAdd -> d
    void response(java.lang.String) -> a
    org.cryptocator.Setup$57 access$0(org.cryptocator.Setup$57$1) -> a
org.cryptocator.Setup$57$1$1 -> org.cryptocator.lk:
    org.cryptocator.Setup$57$1 this$2 -> a
    android.content.Context val$context -> b
    java.lang.String val$serverUrlToAdd -> c
    void run() -> run
org.cryptocator.Setup$57$1$2 -> org.cryptocator.ll:
    org.cryptocator.Setup$57$1 this$2 -> a
    android.content.Context val$context -> b
    java.lang.String val$serverUrlToAdd -> c
    void run() -> run
org.cryptocator.Setup$57$2 -> org.cryptocator.lm:
    org.cryptocator.Setup$57 this$1 -> a
    android.content.Context val$context -> b
    java.lang.String val$serverUrlToAdd -> c
    void run() -> run
org.cryptocator.Setup$58 -> org.cryptocator.ln:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Setup$59 -> org.cryptocator.lo:
    org.cryptocator.Setup this$0 -> a
    void selected(int,boolean) -> a
org.cryptocator.Setup$6 -> org.cryptocator.lp:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$60 -> org.cryptocator.lq:
    android.content.Context val$context -> a
    void run() -> run
org.cryptocator.Setup$61 -> org.cryptocator.lr:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    java.lang.String val$uidBefore -> d
    int val$tmpUid -> e
    java.lang.String val$reactivateurl2 -> f
    java.lang.String val$reseturl2 -> g
    void response(java.lang.String) -> a
    org.cryptocator.Setup access$0(org.cryptocator.Setup$61) -> a
org.cryptocator.Setup$61$1 -> org.cryptocator.ls:
    org.cryptocator.Setup$61 this$1 -> a
    boolean val$positiveResponse -> b
    java.lang.String val$email2 -> c
    java.lang.String val$uid2 -> d
    java.lang.String val$username2 -> e
    android.content.Context val$context -> f
    int val$serverId -> g
    int val$tmpUid -> h
    java.lang.String val$response2 -> i
    java.lang.String val$reactivateurl2 -> j
    java.lang.String val$reseturl2 -> k
    void run() -> run
org.cryptocator.Setup$61$2 -> org.cryptocator.lt:
    org.cryptocator.Setup$61 this$1 -> a
    void run() -> run
org.cryptocator.Setup$62 -> org.cryptocator.lu:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    java.lang.String val$usernameString -> d
    void response(java.lang.String) -> a
    org.cryptocator.Setup access$0(org.cryptocator.Setup$62) -> a
org.cryptocator.Setup$62$1 -> org.cryptocator.lv:
    org.cryptocator.Setup$62 this$1 -> a
    java.lang.String val$response2 -> b
    void run() -> run
org.cryptocator.Setup$62$2 -> org.cryptocator.lw:
    org.cryptocator.Setup$62 this$1 -> a
    void run() -> run
org.cryptocator.Setup$63 -> org.cryptocator.lx:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    java.lang.String val$usernameString -> d
    java.lang.String val$pwdChangeString -> e
    void response(java.lang.String) -> a
    org.cryptocator.Setup access$0(org.cryptocator.Setup$63) -> a
org.cryptocator.Setup$63$1 -> org.cryptocator.ly:
    org.cryptocator.Setup$63 this$1 -> a
    java.lang.String val$response2 -> b
    android.content.Context val$context -> c
    int val$serverId -> d
    java.lang.String val$pwdChangeString -> e
    void run() -> run
org.cryptocator.Setup$63$2 -> org.cryptocator.lz:
    org.cryptocator.Setup$63 this$1 -> a
    void run() -> run
org.cryptocator.Setup$64 -> org.cryptocator.ma:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    java.lang.String val$reseturl2 -> d
    void response(java.lang.String) -> a
    org.cryptocator.Setup access$0(org.cryptocator.Setup$64) -> a
org.cryptocator.Setup$64$1 -> org.cryptocator.mb:
    org.cryptocator.Setup$64 this$1 -> a
    java.lang.String val$response2 -> b
    java.lang.String val$newUID -> c
    android.content.Context val$context -> d
    int val$serverId -> e
    java.lang.String val$reseturl2 -> f
    void run() -> run
org.cryptocator.Setup$64$2 -> org.cryptocator.mc:
    org.cryptocator.Setup$64 this$1 -> a
    void run() -> run
org.cryptocator.Setup$65 -> org.cryptocator.md:
    android.content.Context val$context -> a
    int val$serverId -> b
    void response(java.lang.String) -> a
org.cryptocator.Setup$66 -> org.cryptocator.me:
    boolean val$silent -> a
    android.content.Context val$context -> b
    void response(java.lang.String) -> a
org.cryptocator.Setup$66$1 -> org.cryptocator.mf:
    org.cryptocator.Setup$66 this$1 -> a
    java.lang.String val$response2 -> b
    boolean val$silent -> c
    android.content.Context val$context -> d
    void run() -> run
org.cryptocator.Setup$66$2 -> org.cryptocator.mg:
    org.cryptocator.Setup$66 this$1 -> a
    boolean val$silent -> b
    android.content.Context val$context -> c
    void run() -> run
org.cryptocator.Setup$67 -> org.cryptocator.mh:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    void response(java.lang.String) -> a
    org.cryptocator.Setup access$0(org.cryptocator.Setup$67) -> a
org.cryptocator.Setup$67$1 -> org.cryptocator.mi:
    org.cryptocator.Setup$67 this$1 -> a
    java.lang.String val$response2 -> b
    android.content.Context val$context -> c
    int val$serverId -> d
    void run() -> run
org.cryptocator.Setup$67$2 -> org.cryptocator.mj:
    org.cryptocator.Setup$67 this$1 -> a
    void run() -> run
org.cryptocator.Setup$68 -> org.cryptocator.mk:
    boolean val$enable -> a
    android.content.Context val$context -> b
    int val$serverId -> c
    java.lang.String val$phoneString2 -> d
    void response(java.lang.String) -> a
org.cryptocator.Setup$68$1 -> org.cryptocator.ml:
    org.cryptocator.Setup$68 this$1 -> a
    java.lang.String val$response2 -> b
    boolean val$enable -> c
    android.content.Context val$context -> d
    int val$serverId -> e
    java.lang.String val$phoneString2 -> f
    void run() -> run
org.cryptocator.Setup$68$2 -> org.cryptocator.mm:
    org.cryptocator.Setup$68 this$1 -> a
    void run() -> run
org.cryptocator.Setup$69 -> org.cryptocator.mn:
    android.content.Context val$context -> a
    int val$smsuserAsFallback -> b
    int val$registeredDefault -> c
    void selected(int,boolean) -> a
org.cryptocator.Setup$7 -> org.cryptocator.mo:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    boolean onLongClick(android.view.View) -> onLongClick
org.cryptocator.Setup$70 -> org.cryptocator.mp:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Setup$71 -> org.cryptocator.mq:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Setup$72 -> org.cryptocator.mr:
    org.cryptocator.Setup this$0 -> a
    android.content.Context val$context -> b
    void selected(int,boolean) -> a
org.cryptocator.Setup$73 -> org.cryptocator.ms:
    android.content.Context val$context -> a
    int val$serverId -> b
    void response(java.lang.String) -> a
org.cryptocator.Setup$74 -> org.cryptocator.mt:
    android.content.Context val$context -> a
    int val$serverId -> b
    boolean val$silent -> c
    java.lang.String val$baseUrl -> d
    void response(java.lang.String) -> a
org.cryptocator.Setup$75 -> org.cryptocator.mu:
    android.content.Context val$context -> a
    void selected(int,boolean) -> a
org.cryptocator.Setup$76 -> org.cryptocator.mv:
    android.content.Context val$context -> a
    int val$serverId -> b
    long val$currentTime -> c
    void response(java.lang.String) -> a
org.cryptocator.Setup$8 -> org.cryptocator.mw:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onClick(android.view.View) -> onClick
org.cryptocator.Setup$9 -> org.cryptocator.mx:
    org.cryptocator.Setup this$0 -> a
    android.app.Activity val$context -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.cryptocator.SmileyPrompt -> org.cryptocator.my:
    int MAXSMILEYCOLUMNSLANDSCAPE -> a
    int MAXSMILEYCOLUMNSPORTRAIT -> b
    org.cryptocator.SmileyPrompt$OnSmileySelectedListener onSmileySelectedListener -> c
    void setOnSmileySelectedListener(org.cryptocator.SmileyPrompt$OnSmileySelectedListener) -> a
    void promptSmileys(android.content.Context) -> a
    android.widget.LinearLayout buildSmileyTable(android.content.Context,android.app.Dialog) -> a
    android.widget.LinearLayout access$0(org.cryptocator.SmileyPrompt,android.content.Context,android.app.Dialog) -> a
org.cryptocator.SmileyPrompt$1 -> org.cryptocator.mz:
    org.cryptocator.SmileyPrompt this$0 -> a
    void selected(int,boolean) -> a
org.cryptocator.SmileyPrompt$2 -> org.cryptocator.na:
    org.cryptocator.SmileyPrompt this$0 -> a
    android.content.Context val$context -> b
    android.view.View provide(org.cryptocator.MessageAlertDialog) -> a
org.cryptocator.SmileyPrompt$3 -> org.cryptocator.nb:
    org.cryptocator.SmileyPrompt this$0 -> a
    int val$orderNumber -> b
    android.app.Dialog val$dialog -> c
    void onClick(android.view.View) -> onClick
org.cryptocator.SmileyPrompt$OnSmileySelectedListener -> org.cryptocator.nc:
    void onSelect(java.lang.String) -> a
org.cryptocator.TransitActivity -> org.cryptocator.TransitActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.cryptocator.UidListItem -> org.cryptocator.nd:
    int uid -> a
    java.lang.String name -> b
    java.lang.Long lastMessageTimestamp -> c
    java.lang.String lastMessage -> d
    boolean sortByName -> e
    int compareTo(org.cryptocator.UidListItem) -> a
    void sort(java.util.List,boolean) -> a
    int compareTo(java.lang.Object) -> compareTo
org.cryptocator.UserDetailsActivity -> org.cryptocator.UserDetailsActivity:
    int uid -> a
    java.lang.String HIDDENPHONETEXT -> b
    android.widget.EditText name -> c
    android.widget.EditText phone -> d
    java.lang.String phoneHidden -> e
    android.widget.EditText key -> f
    android.widget.CheckBox nameCheck -> g
    android.widget.TextView phoneCheckText -> h
    android.widget.CheckBox phoneCheck -> i
    android.app.Activity activity -> j
    android.content.Context context -> k
    android.app.AlertDialog alertDialog -> l
    boolean cancel -> m
    boolean handled -> n
    void onCreate(android.os.Bundle) -> onCreate
    void updateUsername() -> a
    void updateKey() -> b
    void save(android.content.Context) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(org.cryptocator.UserDetailsActivity) -> a
    void access$1(org.cryptocator.UserDetailsActivity) -> b
    void access$2(org.cryptocator.UserDetailsActivity,android.content.Context) -> a
org.cryptocator.UserDetailsActivity$1 -> org.cryptocator.ne:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.UserDetailsActivity$2 -> org.cryptocator.nf:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.UserDetailsActivity$3 -> org.cryptocator.ng:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.UserDetailsActivity$4 -> org.cryptocator.nh:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.cryptocator.UserDetailsActivity$5 -> org.cryptocator.ni:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    org.cryptocator.UserDetailsActivity access$0(org.cryptocator.UserDetailsActivity$5) -> a
org.cryptocator.UserDetailsActivity$5$1 -> org.cryptocator.nj:
    org.cryptocator.UserDetailsActivity$5 this$1 -> a
    void selected(int,boolean) -> a
org.cryptocator.UserDetailsActivity$6 -> org.cryptocator.nk:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.UserDetailsActivity$7 -> org.cryptocator.nl:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.cryptocator.UserDetailsActivity$8 -> org.cryptocator.nm:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onUpdate(java.lang.String) -> a
    org.cryptocator.UserDetailsActivity access$0(org.cryptocator.UserDetailsActivity$8) -> a
org.cryptocator.UserDetailsActivity$8$1 -> org.cryptocator.nn:
    org.cryptocator.UserDetailsActivity$8 this$1 -> a
    java.lang.String val$data -> b
    void run() -> run
org.cryptocator.UserDetailsActivity$9 -> org.cryptocator.no:
    org.cryptocator.UserDetailsActivity this$0 -> a
    void onUpdate(java.lang.String) -> a
    org.cryptocator.UserDetailsActivity access$0(org.cryptocator.UserDetailsActivity$9) -> a
org.cryptocator.UserDetailsActivity$9$1 -> org.cryptocator.np:
    org.cryptocator.UserDetailsActivity$9 this$1 -> a
    void run() -> run
org.cryptocator.UserPresentReceiver -> org.cryptocator.UserPresentReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.cryptocator.Utility -> org.cryptocator.nq:
    android.content.SharedPreferences settings -> a
    void hideSoftkeys(android.app.Activity) -> a
    void hideKeyboard(android.app.Activity) -> b
    void hideKeyboardExplicit(android.widget.EditText) -> a
    void showKeyboardExplicit(android.widget.EditText) -> b
    android.content.SharedPreferences getSettings(android.content.Context) -> a
    java.lang.String loadStringSetting(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String loadStringSetting(android.content.Context,java.lang.String,java.lang.String,java.util.HashMap) -> a
    int loadIntSetting(android.content.Context,java.lang.String,int) -> a
    int loadIntSetting(android.content.Context,java.lang.String,int,java.util.HashMap) -> a
    long loadLongSetting(android.content.Context,java.lang.String,long) -> a
    double loadDoubleSetting(android.content.Context,java.lang.String,double) -> a
    boolean loadBooleanSetting(android.content.Context,java.lang.String,boolean) -> a
    boolean loadBooleanSetting(android.content.Context,java.lang.String,boolean,java.util.HashMap) -> a
    void saveBooleanSetting(android.content.Context,java.lang.String,boolean) -> b
    void saveBooleanSetting(android.content.Context,java.lang.String,boolean,java.util.List) -> a
    void saveIntSetting(android.content.Context,java.lang.String,int) -> b
    void saveIntSetting(android.content.Context,java.lang.String,int,java.util.List) -> a
    void saveLongSetting(android.content.Context,java.lang.String,long) -> b
    void saveStringSetting(android.content.Context,java.lang.String,java.lang.String) -> b
    void saveStringSetting(android.content.Context,java.lang.String,java.lang.String,java.util.List) -> a
    void setBackground(android.content.Context,android.view.View,int) -> a
    int parseInt(java.lang.String,int) -> a
    long parseLong(java.lang.String,long) -> a
    double parseDouble(java.lang.String,double) -> a
    java.lang.String urlEncode(java.lang.String) -> a
    java.lang.String urlDecode(java.lang.String) -> b
    java.lang.String getDate(long) -> a
    java.lang.String getTimeTitle(long) -> b
    java.lang.String getHours(long) -> c
    java.lang.String getYear(long) -> d
    java.lang.String getMinutes(long) -> e
    java.lang.String getDeviceId(android.content.Context) -> b
    void showToastShortAsync(android.content.Context,java.lang.String) -> a
    void showToastInUIThread(android.content.Context,java.lang.String) -> b
    void showToastAsync(android.content.Context,java.lang.String) -> c
    void copyToClipboard(android.content.Context,java.lang.String) -> d
    java.lang.String md5(java.lang.String) -> c
    boolean isPhoneMuted(android.content.Context) -> c
    boolean isPhoneMutedOrVibration(android.content.Context) -> d
    java.lang.String getListAsString(java.util.List,java.lang.String) -> a
    java.util.List getListFromString(java.lang.String,java.lang.String) -> a
    java.lang.String cutTextIntoOneLine(java.lang.String,int,int) -> a
    int getScreenWidth(android.content.Context) -> e
    java.lang.String getPhoneNumber(android.content.Context) -> f
    boolean isValidPhoneNumber(java.lang.String) -> d
    java.lang.String getRandomString(int) -> a
    boolean isScreenLocked(android.content.Context) -> g
    android.widget.LinearLayout setContentViewWithCustomTitle(android.app.Activity,int,int) -> a
    void killOwnProcessDelayed(int) -> b
    void noScreenshots(android.app.Activity) -> c
    boolean isOrientationLandscape(android.content.Context) -> h
    void notfiyAlarm(android.content.Context,int) -> a
    android.graphics.Bitmap getBitmapFromBytes(byte[]) -> a
    android.graphics.drawable.Drawable getDrawableFromBitmap(android.content.Context,android.graphics.Bitmap) -> a
    android.graphics.Bitmap loadImageFromBASE64String(android.content.Context,java.lang.String) -> e
    android.graphics.Bitmap getResizedImage(android.graphics.Bitmap,int,int,boolean) -> a
    void smartPaste(android.widget.EditText,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) -> a
    java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    void updateMediaScanner(android.content.Context,java.lang.String) -> f
    android.graphics.Bitmap getBitmapFromContentUri(android.content.Context,android.net.Uri) -> a
    boolean isCameraAvailable(android.content.Context) -> i
    java.lang.String getKB(int) -> c
org.cryptocator.Utility$2 -> org.cryptocator.nr:
    android.content.Context val$context -> a
    java.lang.String val$toastText -> b
    void run() -> run
org.cryptocator.Utility$3 -> org.cryptocator.ns:
    android.content.Context val$context -> a
    java.lang.String val$toastText -> b
    void run() -> run
org.cryptocator.Utility$4 -> org.cryptocator.nt:
    int val$milliseconds -> a
    void run() -> run
org.cryptocator.Utility$5 -> org.cryptocator.nu:
    android.media.Ringtone val$ringtone -> a
    void run() -> run
org.cryptocator.Utility$6 -> org.cryptocator.nv:
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
